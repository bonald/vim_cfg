#!/bin/sh

######################################################################
# Copyright (C) 2004-2015 Centec Networks. All rights reserved.
# OSP sysinit script.  
######################################################################

SWITCH_DIR=""
OVS_DIR=$SWITCH_DIR/usr/local/openvswitch
TAP_DIR=$SWITCH_DIR/usr/local/tap
# export this env var to be used in child scripts.
export OVS_DIR
# Append ovs utilities path to PATH.
PATH=/sbin:/usr/sbin:/bin:/usr/bin
export PATH=$PATH:$OVS_DIR/bin

# check if a dir is mountpoint
is_mount() {
    mountpoint -q $1
    return $?
}

# mount dir if it is not mounted, "mount -t devpts none /dev/pts"
_mount() {
    for last; do true; done
    is_mount $last
    if [ "$?" -ne "0" ]; then
        mkdir -p $last
        mount $@
    fi
}

# mknod if it is not created
_mknod() {
    mknod $@ > /dev/null 2>&1
}

$SWITCH_DIR/bin/busybox --install -s $SWITCH_DIR/bin

_mount -t proc none /proc
_mount -t sysfs sysfs /sys

_mknod /dev/null c 1 3
$SWITCH_DIR/usr/sbin/udevd --daemon 
sleep 1
$SWITCH_DIR/usr/sbin/udevstart
$SWITCH_DIR/usr/sbin/udevtrigger


mkdir -p /dev/pts
_mount -t devpts none /dev/pts

# mount ubifs

boot_size=`cat /proc/mtd | grep "Boot Area" | awk '{printf $2}'`
system_size=`cat /proc/mtd | grep "System Area" | awk '{printf $2}'`

echo -n "Mounting /dev/mtdblock5... "
ubiattach /dev/ubi_ctrl -m 5 
sleep 2
if ! mount -t ubifs -o sync ubi0:system /mnt/flash > /dev/null 2>&1; then
    echo "failed!"

	echo "Create ubi filesystem on system partition ..."
	ubidetach -p /dev/mtd5
#	ubiformat  /dev/mtd5 -y
#	echo "Done!" 
	ubiattach /dev/ubi_ctrl -m 5
	sleep 1
	if [ "$system_size" == 10000000 ]; then
		ubimkvol  /dev/ubi0 -N system -s 200MiB
	else
		ubimkvol  /dev/ubi0 -N system -s 950MiB 
	fi
	sleep 1
    echo -n "Retry Mounting /dev/mtdblock5... "
    if ! mount -t ubifs -o sync ubi0:system /mnt/flash >/dev/null 2>&1; then
		echo "retry mount /dev/mtdblock5 failed!"
	else 
        echo "OK!" 
    fi
else
    echo "OK!"
fi

#for bug 34560 by tongzb 2016-09-26
if [ ! -d /mnt/flash/boot ]; then
    mkdir /mnt/flash/boot
fi

echo -n "Mounting /dev/mtdblock4... "
ubiattach /dev/ubi_ctrl -m 4 
sleep 1		

# mount boot partition to readonly mode for bug 33181
if ! mount -t ubifs -r ubi1:boot /mnt/flash/boot > /dev/null 2>&1; then
    echo "failed!"

	echo "Create ubi filesystem on boot partition ..."
	ubidetach -p /dev/mtd4
#	ubiformat  /dev/mtd4 -y
#	echo "Done!" 
	ubiattach /dev/ubi_ctrl -m 4
	sleep 1
	if [ "$boot_size" == 08000000 ]; then
		ubimkvol  /dev/ubi1 -N boot -s 70MiB 
	else
		ubimkvol  /dev/ubi1 -N boot -s 832MiB
	fi
	sleep 1
    echo -n "Retry Mounting /dev/mtdblock4... "
    if ! mount -t ubifs ubi1:boot /mnt/flash/boot > /dev/null 2>&1; then 
		echo "Retry Mount /dev/mtdblock4 failed!"
	fi
	
	if ! mount -t ubifs -o remount -r ubi1:boot /mnt/flash/boot/ >/dev/null 2>&1; then
		echo "Retry Mount /dev/mtdblock4 failed!"
	else
		echo "OK!"
	fi
else
    echo "OK!"
fi

# switch root to debian rootfs
#if [ -f /mnt/flash/debian_powerpc_jessie/sbin/init ]; then
#    umount /proc /sys /mnt/flash/boot
#    mount --bind /mnt/flash/debian_powerpc_jessie /mnt/flash
#    exec /bin/switch_root -c /dev/console /mnt/flash/ /sbin/init 3
debian_rootfs_parent_dir=/mnt/flash/debian
debian_rootfs_dir=.rootfs_dir
if [ -f $debian_rootfs_parent_dir/debian_powerpc_jessie.squash ]; then
    losetup /dev/loop0 $debian_rootfs_parent_dir/debian_powerpc_jessie.squash
    sleep 2
    mount /dev/loop0 $debian_rootfs_parent_dir/.overlay_ro
    sleep 1
    mount -t tmpfs none $debian_rootfs_parent_dir/.xino
    sleep 1
    mount -t aufs -o br=$debian_rootfs_parent_dir/.overlay_rw:$debian_rootfs_parent_dir/.overlay_ro=ro,xino=$debian_rootfs_parent_dir/.xino/.aufs.xino,sync none $debian_rootfs_parent_dir/$debian_rootfs_dir
    sleep 1
    busybox killall udevd
    if [ "`busybox mount | grep /mnt/udisk`" != "" ]; then
        busybox umount /mnt/udisk
        rmdir /mnt/udisk
    fi
    umount /proc /sys /mnt/flash/boot
    sleep 1
    exec /bin/switch_root -c /dev/console $debian_rootfs_parent_dir/$debian_rootfs_dir /sbin/init 3
else
    exec /bin/init -z
fi
