#
# Configuration file for syslog-ng
#
# (C) Copyright Centec Networks Inc.  All rights reserved.
#
# Authors: Alexander Liu.

######
# options

options {
        # disable the chained hostname format in logs
        # (default is enabled)
        chain_hostnames(0);

        # the time to wait before a died connection is re-established
        # (default is 60)
        time_reopen(10);

        # the time to wait before an idle destination file is closed
        # (default is 60)
        time_reap(360);

        # timestamp
        # default is rfc3164.
        ts_format("rfc3164");

        # the number of lines buffered before written to file
        # you might want to increase this if your disk isn't catching with
        # all the log messages you get or if you want less disk activity
        # (say on a laptop)
        # (default is 0)
        #sync(0);

        # the number of lines fitting in the output queue
        log_fifo_size(2048);

        # enable or disable directory creation for destination files
        create_dirs(yes);

        # default owner, group, and permissions for log files
        # (defaults are 0, 0, 0600)
        #owner(root);
        #group(root);
        perm(0640);

        # default owner, group, and permissions for created directories
        # (defaults are 0, 0, 0700)
        #dir_owner(root);
        #dir_group(root);
        dir_perm(0755);

        # enable or disable DNS usage
        # syslog-ng blocks on DNS queries, so enabling DNS may lead to
        # a Denial of Service attack
        # (default is yes)
        use_dns(no);

        # maximum length of message in bytes
        # this is only limited by the program listening on the /dev/log Unix
        # socket, glibc can handle arbitrary length log messages, but -- for
        # example -- syslogd accepts only 1024 bytes
        # (default is 2048)
        #log_msg_size(2048);
};


# all known message sources
source src_all {
        # message generated by Syslog-NG
        internal();
        # standard Linux log source (this is the default place for the syslog()
        # function to send logs to)
        unix-dgram("/dev/log");
        # messages from the kernel
        file("/proc/kmsg" log_prefix("kernel: "));
        # use the above line if you want to receive remote UDP logging messages
        # (this is equivalent to the "-r" syslogd flag)
        #udp(ip(0.0.0.0) port(514));
};

filter f_file_severity { level(warn..emerg); };

filter f_srv_severity { level(warn..emerg); };

filter f_mod_severity { level(warn..emerg); };

filter f_diag_severity { level(debug..emerg); };

filter f_trap_filter { level(err..emerg) and (facility(local6); };

filter f_diag_facility { not facility(local7); };

# To logging buffer
destination d_logbuffer { unix-stream("/tmp/.logbuf_line", template("$R_DATE $HOST $PROGRAM-$LEVEL_NUM$CTCBRIEF: $MSGONLY\n")); };

# To logging file
destination d_logfile { file("/var/log/syslog/$R_YEAR/$R_MONTH/$R_YEAR-$R_MONTH-$R_DAY", template("$R_DATE $HOST $PROGRAM-$LEVEL_NUM$CTCBRIEF: $MSGONLY\n")); };

# To diag logging file
destination d_logfile { file("/var/log/diag_messages", template("$R_DATE $PROGRAM-$LEVEL_NUM$CTCBRIEF: $MSGONLY\n")
sizelimitation(524288) syncscript("/centec_switch/sbin/logsync.sh")); };

# To logging snmp-trap ( Added by zhoucheng for alarm log)
destination d_logtrap { unix-stream("/tmp/.logtrap", template("$MSGONLY\n")); };

# Log to logging buffer
log
{
    source(src_all);
    filter(f_mod_severity);
    destination(d_logbuffer);
};

# Log to logging file
log
{
    source(src_all);
    filter(f_file_severity);
    destination(d_logfile);
};

# Log to diag logging buffer
log
{
    source(src_all);
    filter(f_diag_severity);
    filter(f_diag_facility);
    destination(d_logbuffer);
};

#
# Log to snmp-trap (Added by zhoucheng for alarm log)
#
log
{
    source(src_all);
    filter(f_trap_filter);
    destination(d_logtrap);
};
