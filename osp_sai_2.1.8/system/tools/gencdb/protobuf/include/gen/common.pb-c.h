/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: common.proto */

#ifndef PROTOBUF_C_common_2eproto__INCLUDED
#define PROTOBUF_C_common_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Cdb__SubscribeRequestCdb Cdb__SubscribeRequestCdb;
typedef struct _Cdb__SubscribeRequestTbl Cdb__SubscribeRequestTbl;
typedef struct _Cdb__SubscribeRequest Cdb__SubscribeRequest;
typedef struct _Cdb__SubscribeResponse Cdb__SubscribeResponse;
typedef struct _Cdb__ComposeMacAddrT Cdb__ComposeMacAddrT;
typedef struct _Cdb__ComposeFdbKeyT Cdb__ComposeFdbKeyT;
typedef struct _Cdb__ComposeMstpDigestT Cdb__ComposeMstpDigestT;
typedef struct _Cdb__ComposeBrgAllowedVlanT Cdb__ComposeBrgAllowedVlanT;
typedef struct _Cdb__ComposePtpCommonMessageHeaderT Cdb__ComposePtpCommonMessageHeaderT;
typedef struct _Cdb__ComposePtpMsgAnnounceT Cdb__ComposePtpMsgAnnounceT;
typedef struct _Cdb__ComposePtpDefaultT Cdb__ComposePtpDefaultT;
typedef struct _Cdb__ComposePtpCurrentT Cdb__ComposePtpCurrentT;
typedef struct _Cdb__ComposePtpParentT Cdb__ComposePtpParentT;
typedef struct _Cdb__ComposePtpTimePropertiesT Cdb__ComposePtpTimePropertiesT;
typedef struct _Cdb__ComposePtpGlobalCT Cdb__ComposePtpGlobalCT;
typedef struct _Cdb__ComposePtpPortT Cdb__ComposePtpPortT;
typedef struct _Cdb__ComposeGlbPtpPortAddressT Cdb__ComposeGlbPtpPortAddressT;
typedef struct _Cdb__ComposeGlbPtpTimeintervalT Cdb__ComposeGlbPtpTimeintervalT;
typedef struct _Cdb__ComposePtpDumpFlagT Cdb__ComposePtpDumpFlagT;
typedef struct _Cdb__ComposePtpVlanInfoT Cdb__ComposePtpVlanInfoT;
typedef struct _Cdb__ComposePtpPortPT Cdb__ComposePtpPortPT;
typedef struct _Cdb__ComposePtpPortCT Cdb__ComposePtpPortCT;
typedef struct _Cdb__ComposePtpPortStatsT Cdb__ComposePtpPortStatsT;
typedef struct _Cdb__ComposePtpMsgProcOpsT Cdb__ComposePtpMsgProcOpsT;
typedef struct _Cdb__ComposeKernelIfIpv6AddrT Cdb__ComposeKernelIfIpv6AddrT;
typedef struct _Cdb__ComposeTpoamDmT Cdb__ComposeTpoamDmT;
typedef struct _Cdb__ComposeTpoamLmT Cdb__ComposeTpoamLmT;
typedef struct _Cdb__ComposeTpoamLbT Cdb__ComposeTpoamLbT;
typedef struct _Cdb__ComposeTpoamEventT Cdb__ComposeTpoamEventT;
typedef struct _Cdb__ComposeTpoamStatsT Cdb__ComposeTpoamStatsT;
typedef struct _Cdb__ComposeTpoamListT Cdb__ComposeTpoamListT;
typedef struct _Cdb__ComposeTpoamRcCountT Cdb__ComposeTpoamRcCountT;
typedef struct _Cdb__ComposeTpoamExecT Cdb__ComposeTpoamExecT;
typedef struct _Cdb__ComposeTpoamTrapCacheT Cdb__ComposeTpoamTrapCacheT;
typedef struct _Cdb__ComposeTpoamRatelimitT Cdb__ComposeTpoamRatelimitT;
typedef struct _Cdb__ComposeTpoamLmmExecT Cdb__ComposeTpoamLmmExecT;
typedef struct _Cdb__ComposeTpoamLbExecT Cdb__ComposeTpoamLbExecT;
typedef struct _Cdb__ComposeTpoam1dmDmmExecT Cdb__ComposeTpoam1dmDmmExecT;
typedef struct _Cdb__ComposeUploadTpoamDmT Cdb__ComposeUploadTpoamDmT;
typedef struct _Cdb__ComposeUploadTpoamLmT Cdb__ComposeUploadTpoamLmT;
typedef struct _Cdb__ComposeUploadTpoamCcmT Cdb__ComposeUploadTpoamCcmT;
typedef struct _Cdb__ComposeGlbBoardTypeT Cdb__ComposeGlbBoardTypeT;
typedef struct _Cdb__ComposeGlbStatsT Cdb__ComposeGlbStatsT;
typedef struct _Cdb__ComposeMstiPortKeyT Cdb__ComposeMstiPortKeyT;
typedef struct _Cdb__ComposeBindingKeyT Cdb__ComposeBindingKeyT;
typedef struct _Cdb__ComposeNsPortForwardingKeyT Cdb__ComposeNsPortForwardingKeyT;
typedef struct _Cdb__ComposeRouteNodeKeyT Cdb__ComposeRouteNodeKeyT;
typedef struct _Cdb__ComposeRouteNodeKeyWithAdT Cdb__ComposeRouteNodeKeyWithAdT;
typedef struct _Cdb__ComposeSummerTimeT Cdb__ComposeSummerTimeT;
typedef struct _Cdb__ComposeWhichSummerTimeT Cdb__ComposeWhichSummerTimeT;
typedef struct _Cdb__ComposeOspfAreaRangeKeyT Cdb__ComposeOspfAreaRangeKeyT;
typedef struct _Cdb__ComposeOspf6AreaRangeKeyT Cdb__ComposeOspf6AreaRangeKeyT;
typedef struct _Cdb__ComposeOspfAreaVlinkKeyT Cdb__ComposeOspfAreaVlinkKeyT;
typedef struct _Cdb__ComposeRipTimersT Cdb__ComposeRipTimersT;
typedef struct _Cdb__ComposeNexthopKeyT Cdb__ComposeNexthopKeyT;
typedef struct _Cdb__ComposeAddrIpv4T Cdb__ComposeAddrIpv4T;
typedef struct _Cdb__ComposeAddrIpv6T Cdb__ComposeAddrIpv6T;
typedef struct _Cdb__ComposePrefixIpv4T Cdb__ComposePrefixIpv4T;
typedef struct _Cdb__ComposePrefixT Cdb__ComposePrefixT;
typedef struct _Cdb__ComposeMstpBrgIdT Cdb__ComposeMstpBrgIdT;
typedef struct _Cdb__ComposeSalTimeT Cdb__ComposeSalTimeT;
typedef struct _Cdb__ComposeTimeRangeValueT Cdb__ComposeTimeRangeValueT;
typedef struct _Cdb__ComposeTimeRangeTimerT Cdb__ComposeTimeRangeTimerT;
typedef struct _Cdb__ComposeSnmpTrapKeyT Cdb__ComposeSnmpTrapKeyT;
typedef struct _Cdb__ComposeSnmpViewKeyT Cdb__ComposeSnmpViewKeyT;
typedef struct _Cdb__ComposeSnmpGroupUsmKeyT Cdb__ComposeSnmpGroupUsmKeyT;
typedef struct _Cdb__ComposeSnmpInformKeyT Cdb__ComposeSnmpInformKeyT;
typedef struct _Cdb__ComposeAddrT Cdb__ComposeAddrT;
typedef struct _Cdb__ComposeSnmpInfoT Cdb__ComposeSnmpInfoT;
typedef struct _Cdb__ComposeUserT Cdb__ComposeUserT;
typedef struct _Cdb__ComposeRsaKeystrT Cdb__ComposeRsaKeystrT;
typedef struct _Cdb__ComposeTimestampT Cdb__ComposeTimestampT;
typedef struct _Cdb__ComposeMailT Cdb__ComposeMailT;
typedef struct _Cdb__ComposeGlbFlowL4PortT Cdb__ComposeGlbFlowL4PortT;
typedef struct _Cdb__ComposeGlbFlowTcpFlagT Cdb__ComposeGlbFlowTcpFlagT;
typedef struct _Cdb__ComposeNexthopEcmpT Cdb__ComposeNexthopEcmpT;
typedef struct _Cdb__ComposeNexthopEcmpRoutedT Cdb__ComposeNexthopEcmpRoutedT;
typedef struct _Cdb__ComposeAceConfigKeyT Cdb__ComposeAceConfigKeyT;
typedef struct _Cdb__ComposeLldpMsapIdT Cdb__ComposeLldpMsapIdT;
typedef struct _Cdb__ComposePtpForeignMasterT Cdb__ComposePtpForeignMasterT;
typedef struct _Cdb__ComposePtpResidenceTimeCacheT Cdb__ComposePtpResidenceTimeCacheT;
typedef struct _Cdb__ComposeErpsRingKeyT Cdb__ComposeErpsRingKeyT;
typedef struct _Cdb__ComposeClassInPolicyConfigKeyT Cdb__ComposeClassInPolicyConfigKeyT;
typedef struct _Cdb__ComposeAclInClassConfigKeyT Cdb__ComposeAclInClassConfigKeyT;
typedef struct _Cdb__ComposeClassMapActionConfigKeyT Cdb__ComposeClassMapActionConfigKeyT;
typedef struct _Cdb__ComposeTapGroupIngressKeyT Cdb__ComposeTapGroupIngressKeyT;
typedef struct _Cdb__ComposeTapGroupIngressFlowKeyT Cdb__ComposeTapGroupIngressFlowKeyT;
typedef struct _Cdb__ComposeTapGroupEgressKeyT Cdb__ComposeTapGroupEgressKeyT;
typedef struct _Cdb__ComposeTapFiveTupleKeyT Cdb__ComposeTapFiveTupleKeyT;
typedef struct _Cdb__ComposeTapTupleAclEntryIdT Cdb__ComposeTapTupleAclEntryIdT;
typedef struct _Cdb__ComposeAuthServerKeyT Cdb__ComposeAuthServerKeyT;
typedef struct _Cdb__ComposeAuthSessionKeyT Cdb__ComposeAuthSessionKeyT;
typedef struct _Cdb__ComposeLldpCivicAddressT Cdb__ComposeLldpCivicAddressT;
typedef struct _Cdb__ComposeFeaG8032RingKeyT Cdb__ComposeFeaG8032RingKeyT;
typedef struct _Cdb__ComposeIgspGroupKeyT Cdb__ComposeIgspGroupKeyT;
typedef struct _Cdb__ComposeDot1xRadiusKeyT Cdb__ComposeDot1xRadiusKeyT;
typedef struct _Cdb__ComposeDeadRadiusKeyT Cdb__ComposeDeadRadiusKeyT;
typedef struct _Cdb__ComposeDot1xMacKeyT Cdb__ComposeDot1xMacKeyT;
typedef struct _Cdb__ComposeMirrorMacEscapeKeyT Cdb__ComposeMirrorMacEscapeKeyT;
typedef struct _Cdb__ComposeNsRouteKeyT Cdb__ComposeNsRouteKeyT;
typedef struct _Cdb__ComposeOpenflowManagerKeyT Cdb__ComposeOpenflowManagerKeyT;
typedef struct _Cdb__ComposeGlbPtpPortIdT Cdb__ComposeGlbPtpPortIdT;
typedef struct _Cdb__ComposeInbandSnatKeyT Cdb__ComposeInbandSnatKeyT;
typedef struct _Cdb__ComposeArpaceConfigKeyT Cdb__ComposeArpaceConfigKeyT;
typedef struct _Cdb__ComposeSflowCollectorKeyT Cdb__ComposeSflowCollectorKeyT;
typedef struct _Cdb__ComposeVrrpVmacKeyT Cdb__ComposeVrrpVmacKeyT;
typedef struct _Cdb__ComposeSsmClockIdT Cdb__ComposeSsmClockIdT;
typedef struct _Cdb__ComposeRmonStatsHistoryKeyT Cdb__ComposeRmonStatsHistoryKeyT;
typedef struct _Cdb__ComposeIpslaPacketStatsKeyT Cdb__ComposeIpslaPacketStatsKeyT;
typedef struct _Cdb__ComposeIpslaTestStatsKeyT Cdb__ComposeIpslaTestStatsKeyT;
typedef struct _Cdb__ComposeMrtKeyT Cdb__ComposeMrtKeyT;
typedef struct _Cdb__ComposeVlanMappingEntryKeyT Cdb__ComposeVlanMappingEntryKeyT;
typedef struct _Cdb__ComposeEgressMappingEntryKeyT Cdb__ComposeEgressMappingEntryKeyT;
typedef struct _Cdb__ComposeMappedVlanInfoKeyT Cdb__ComposeMappedVlanInfoKeyT;
typedef struct _Cdb__ComposeNdPrefixKeyT Cdb__ComposeNdPrefixKeyT;
typedef struct _Cdb__ComposeL2proIfActionVlanT Cdb__ComposeL2proIfActionVlanT;
typedef struct _Cdb__ComposeGlbQosColorActionT Cdb__ComposeGlbQosColorActionT;
typedef struct _Cdb__ComposeQosPolicerResKeyT Cdb__ComposeQosPolicerResKeyT;
typedef struct _Cdb__ComposeL2editKeyT Cdb__ComposeL2editKeyT;
typedef struct _Cdb__ComposeCtclibOpbT Cdb__ComposeCtclibOpbT;
typedef struct _Cdb__ComposeNatRuleKeyT Cdb__ComposeNatRuleKeyT;
typedef struct _Cdb__ComposeNatSessionKeyT Cdb__ComposeNatSessionKeyT;
typedef struct _Cdb__ComposeNatProxyArpKeyT Cdb__ComposeNatProxyArpKeyT;
typedef struct _Cdb__ComposeGlbPoeCfgT Cdb__ComposeGlbPoeCfgT;
typedef struct _Cdb__ComposeCfmMaKeyT Cdb__ComposeCfmMaKeyT;
typedef struct _Cdb__ComposeCfmLmepKeyT Cdb__ComposeCfmLmepKeyT;
typedef struct _Cdb__ComposeCfmRmepKeyT Cdb__ComposeCfmRmepKeyT;
typedef struct _Cdb__ComposeCfmTimeKeyT Cdb__ComposeCfmTimeKeyT;
typedef struct _Cdb__ComposePimSmGprefixT Cdb__ComposePimSmGprefixT;
typedef struct _Cdb__ComposePimStaticRpAddrT Cdb__ComposePimStaticRpAddrT;


/* --- enums --- */

typedef enum _Cdb__SubscribeResponse__CdbOpertion {
  CDB__SUBSCRIBE_RESPONSE__CDB_OPERTION__OPER_ADD = 0,
  CDB__SUBSCRIBE_RESPONSE__CDB_OPERTION__OPER_SET = 1,
  CDB__SUBSCRIBE_RESPONSE__CDB_OPERTION__OPER_GET = 2,
  CDB__SUBSCRIBE_RESPONSE__CDB_OPERTION__OPER_DEL = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CDB__SUBSCRIBE_RESPONSE__CDB_OPERTION)
} Cdb__SubscribeResponse__CdbOpertion;

/* --- messages --- */

struct  _Cdb__SubscribeRequestCdb
{
  ProtobufCMessage base;
  uint32_t node_type;
  uint32_t tbl_id;
  uint32_t field;
  char *key;
};
#define CDB__SUBSCRIBE_REQUEST_CDB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__subscribe_request_cdb__descriptor) \
    , 0, 0, 0, NULL }


struct  _Cdb__SubscribeRequestTbl
{
  ProtobufCMessage base;
  uint32_t sync;
  size_t n_table;
  uint32_t *table;
};
#define CDB__SUBSCRIBE_REQUEST_TBL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__subscribe_request_tbl__descriptor) \
    , 0, 0,NULL }


struct  _Cdb__SubscribeRequest
{
  ProtobufCMessage base;
  uint32_t type;
  uint32_t pid;
  uint32_t src;
  uint32_t format;
  Cdb__SubscribeRequestCdb *cdb;
  Cdb__SubscribeRequestTbl *tbl;
};
#define CDB__SUBSCRIBE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__subscribe_request__descriptor) \
    , 0, 0, 0, 0, NULL, NULL }


struct  _Cdb__SubscribeResponse
{
  ProtobufCMessage base;
  Cdb__SubscribeResponse__CdbOpertion action;
  uint32_t tbl_id;
  uint32_t field_id;
  uint32_t ds_id;
  uint32_t ds2_id;
};
#define CDB__SUBSCRIBE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__subscribe_response__descriptor) \
    , 0, 0, 0, 0, 0 }


struct  _Cdb__ComposeMacAddrT
{
  ProtobufCMessage base;
  ProtobufCBinaryData mac;
};
#define CDB__COMPOSE_MAC_ADDR_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_mac_addr_t__descriptor) \
    , {0,NULL} }


struct  _Cdb__ComposeFdbKeyT
{
  ProtobufCMessage base;
  uint32_t fid;
  ProtobufCBinaryData mac;
};
#define CDB__COMPOSE_FDB_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_fdb_key_t__descriptor) \
    , 0, {0,NULL} }


struct  _Cdb__ComposeMstpDigestT
{
  ProtobufCMessage base;
  ProtobufCBinaryData data;
};
#define CDB__COMPOSE_MSTP_DIGEST_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_mstp_digest_t__descriptor) \
    , {0,NULL} }


struct  _Cdb__ComposeBrgAllowedVlanT
{
  ProtobufCMessage base;
  ProtobufCBinaryData vlan_bmp;
};
#define CDB__COMPOSE_BRG_ALLOWED_VLAN_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_brg_allowed_vlan_t__descriptor) \
    , {0,NULL} }


struct  _Cdb__ComposePtpCommonMessageHeaderT
{
  ProtobufCMessage base;
  ProtobufCBinaryData ptp_common_message_header;
};
#define CDB__COMPOSE_PTP_COMMON_MESSAGE_HEADER_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_common_message_header_t__descriptor) \
    , {0,NULL} }


struct  _Cdb__ComposePtpMsgAnnounceT
{
  ProtobufCMessage base;
  ProtobufCBinaryData origin_timestamp;
  int32_t current_utc_offset;
  uint32_t grandmaster_priority1;
  uint32_t grandmaster_priority2;
  ProtobufCBinaryData grandmaster_clock_quality;
  ProtobufCBinaryData grandmaster_identity;
  uint32_t steps_removed;
  uint32_t time_source;
};
#define CDB__COMPOSE_PTP_MSG_ANNOUNCE_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_msg_announce_t__descriptor) \
    , {0,NULL}, 0, 0, 0, {0,NULL}, {0,NULL}, 0, 0 }


struct  _Cdb__ComposePtpDefaultT
{
  ProtobufCMessage base;
  ProtobufCBinaryData clock_identity;
  uint32_t two_step_flag;
  uint32_t number_ports;
  ProtobufCBinaryData clock_quality;
  uint32_t priority1;
  uint32_t priority2;
  uint32_t domain_number;
  uint32_t slave_only;
  uint32_t delay_mechanism;
  uint32_t primary_domain;
};
#define CDB__COMPOSE_PTP_DEFAULT_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_default_t__descriptor) \
    , {0,NULL}, 0, 0, {0,NULL}, 0, 0, 0, 0, 0, 0 }


struct  _Cdb__ComposePtpCurrentT
{
  ProtobufCMessage base;
  int64_t offset_from_master;
  int64_t mean_path_delay;
  uint32_t steps_removed;
};
#define CDB__COMPOSE_PTP_CURRENT_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_current_t__descriptor) \
    , 0, 0, 0 }


struct  _Cdb__ComposePtpParentT
{
  ProtobufCMessage base;
  ProtobufCBinaryData parent_port_identity;
  uint32_t parent_stats;
  uint32_t observed_parent_offset_scaled_log_variance;
  int32_t observed_parent_clock_phase_change_rate;
  ProtobufCBinaryData grandmaster_identity;
  ProtobufCBinaryData grandmaster_clock_quality;
  uint32_t grandmaster_priority1;
  uint32_t grandmaster_priority2;
};
#define CDB__COMPOSE_PTP_PARENT_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_parent_t__descriptor) \
    , {0,NULL}, 0, 0, 0, {0,NULL}, {0,NULL}, 0, 0 }


struct  _Cdb__ComposePtpTimePropertiesT
{
  ProtobufCMessage base;
  int32_t current_utc_offset;
  uint32_t current_utc_offset_valid;
  uint32_t leap59;
  uint32_t leap61;
  uint32_t time_traceable;
  uint32_t frequency_traceable;
  uint32_t ptp_timescale;
  uint32_t time_source;
};
#define CDB__COMPOSE_PTP_TIME_PROPERTIES_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_time_properties_t__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _Cdb__ComposePtpGlobalCT
{
  ProtobufCMessage base;
  ProtobufCBinaryData last_sync_tx_ts;
  ProtobufCBinaryData last_sync_rx_ts;
  int64_t last_master_to_slave_delay;
  int64_t last_correction_field_with_mean_path_delay;
  ProtobufCBinaryData servo_nns_cache;
  int32_t mean_nns;
  uint32_t servo_offset_cnt;
  uint32_t servo_nns_pos;
  uint32_t servo_nns_cnt;
  uint32_t servo_nns_lock_cnt;
  ProtobufCBinaryData servo_nns;
};
#define CDB__COMPOSE_PTP_GLOBAL_C_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_global_c_t__descriptor) \
    , {0,NULL}, {0,NULL}, 0, 0, {0,NULL}, 0, 0, 0, 0, 0, {0,NULL} }


struct  _Cdb__ComposePtpPortT
{
  ProtobufCMessage base;
  uint32_t port_identity_port_num;
  uint32_t port_state;
  int32_t log_min_delay_req_interval;
  int64_t peer_mean_path_delay;
  int32_t log_announce_interval;
  uint32_t announce_receipt_timeout;
  int32_t log_sync_interval;
  uint32_t delay_mechanism;
  int32_t log_min_pdelay_req_interval;
  uint32_t version_number;
  int32_t faulty_flag;
};
#define CDB__COMPOSE_PTP_PORT_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_port_t__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _Cdb__ComposeGlbPtpPortAddressT
{
  ProtobufCMessage base;
  uint32_t protocol;
  uint32_t length;
  uint32_t dest_ip_addr;
  ProtobufCBinaryData field;
};
#define CDB__COMPOSE_GLB_PTP_PORT_ADDRESS_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_glb_ptp_port_address_t__descriptor) \
    , 0, 0, 0, {0,NULL} }


struct  _Cdb__ComposeGlbPtpTimeintervalT
{
  ProtobufCMessage base;
  int64_t v;
  ProtobufCBinaryData value;
};
#define CDB__COMPOSE_GLB_PTP_TIMEINTERVAL_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_glb_ptp_timeinterval_t__descriptor) \
    , 0, {0,NULL} }


struct  _Cdb__ComposePtpDumpFlagT
{
  ProtobufCMessage base;
  ProtobufCBinaryData ptp_dump_flag;
};
#define CDB__COMPOSE_PTP_DUMP_FLAG_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_dump_flag_t__descriptor) \
    , {0,NULL} }


struct  _Cdb__ComposePtpVlanInfoT
{
  ProtobufCMessage base;
  ProtobufCBinaryData vlan;
};
#define CDB__COMPOSE_PTP_VLAN_INFO_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_vlan_info_t__descriptor) \
    , {0,NULL} }


struct  _Cdb__ComposePtpPortPT
{
  ProtobufCMessage base;
  uint32_t sent_announce_sequence_id;
  uint32_t sent_sync_sequence_id;
  uint32_t sent_delay_req_sequence_id;
  uint32_t sent_pdelay_req_sequence_id;
  uint32_t recv_sync_sequence_id;
  ProtobufCBinaryData sync_send_time;
  ProtobufCBinaryData sync_receive_time;
  ProtobufCBinaryData last_sync_correction_field;
  int64_t last_delay_m_s;
  uint32_t waiting_for_follow;
  ProtobufCBinaryData delay_req_send_time;
  ProtobufCBinaryData delay_req_receive_time;
  ProtobufCBinaryData last_delay_resp_correction_field;
  ProtobufCBinaryData pdelay_req_send_time;
  ProtobufCBinaryData pdelay_resp_send_time;
  ProtobufCBinaryData pdelay_req_receive_time;
  ProtobufCBinaryData pdelay_resp_receive_time;
  ProtobufCBinaryData last_pdelay_resp_correction_field;
  uint32_t waiting_for_pdelay_resp_follow;
  int64_t delay_m_s;
  int64_t delay_s_m;
  int64_t pdelay_m_s;
  int64_t pdelay_s_m;
  int64_t offset_adjusted;
};
#define CDB__COMPOSE_PTP_PORT_P_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_port_p_t__descriptor) \
    , 0, 0, 0, 0, 0, {0,NULL}, {0,NULL}, {0,NULL}, 0, 0, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0, 0, 0, 0, 0, 0 }


struct  _Cdb__ComposePtpPortCT
{
  ProtobufCMessage base;
  ProtobufCBinaryData path_delay_cache;
  ProtobufCBinaryData servo_pdc;
};
#define CDB__COMPOSE_PTP_PORT_C_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_port_c_t__descriptor) \
    , {0,NULL}, {0,NULL} }


struct  _Cdb__ComposePtpPortStatsT
{
  ProtobufCMessage base;
  uint32_t announce;
  uint32_t sync;
  uint32_t delay_req;
  uint32_t delay_resp;
  uint32_t follow_up;
  uint32_t pdelay_req;
  uint32_t pdelay_resp;
  uint32_t pdelay_resp_follow_up;
  uint32_t unknown;
};
#define CDB__COMPOSE_PTP_PORT_STATS_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_port_stats_t__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _Cdb__ComposePtpMsgProcOpsT
{
  ProtobufCMessage base;
  ProtobufCBinaryData handle_proc;
  ProtobufCBinaryData issue_proc;
  ProtobufCBinaryData forward_proc;
  ProtobufCBinaryData forward_test_proc;
};
#define CDB__COMPOSE_PTP_MSG_PROC_OPS_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_msg_proc_ops_t__descriptor) \
    , {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL} }


struct  _Cdb__ComposeKernelIfIpv6AddrT
{
  ProtobufCMessage base;
  ProtobufCBinaryData ip_addr_v6;
  ProtobufCBinaryData masklen_v6;
};
#define CDB__COMPOSE_KERNEL_IF_IPV6_ADDR_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_kernel_if_ipv6_addr_t__descriptor) \
    , {0,NULL}, {0,NULL} }


struct  _Cdb__ComposeTpoamDmT
{
  ProtobufCMessage base;
  uint32_t per_dm_status;
  uint32_t tx_count;
  uint32_t rx_count;
  ProtobufCBinaryData para;
  ProtobufCBinaryData rx1dm;
  int64_t delay_threshold;
  uint32_t is_event_occur;
  uint32_t normal_packet_cnt_continue;
  uint32_t packet_cnt_for_upload;
};
#define CDB__COMPOSE_TPOAM_DM_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tpoam_dm_t__descriptor) \
    , 0, 0, 0, {0,NULL}, {0,NULL}, 0, 0, 0, 0 }


struct  _Cdb__ComposeTpoamLmT
{
  ProtobufCMessage base;
  uint32_t lm_type;
  ProtobufCBinaryData lm_dual;
  ProtobufCBinaryData lm_single;
  uint32_t local_loss_threshold;
  uint32_t remote_loss_threshold;
  uint32_t sd_enable;
  uint32_t is_event_occur;
  uint32_t normal_packet_cnt_continue;
};
#define CDB__COMPOSE_TPOAM_LM_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tpoam_lm_t__descriptor) \
    , 0, {0,NULL}, {0,NULL}, 0, 0, 0, 0, 0 }


struct  _Cdb__ComposeTpoamLbT
{
  ProtobufCMessage base;
  uint32_t active;
  uint32_t per_lb_status;
  ProtobufCBinaryData lbm_para;
  ProtobufCBinaryData discovery;
  ProtobufCBinaryData p_lbm_data;
  ProtobufCBinaryData tx_skb;
  uint32_t payload_len;
  uint32_t lbm_next_trans_id;
  uint32_t lbm_tx_count;
  uint32_t lbr_rx_count;
  uint32_t lbr_out_order_count;
  ProtobufCBinaryData lbm_start;
  ProtobufCBinaryData lbm_stop;
  ProtobufCBinaryData p_t_lb_timer;
  ProtobufCBinaryData p_t_lb_exec_timer;
  ProtobufCBinaryData pst_lb_cache_list;
};
#define CDB__COMPOSE_TPOAM_LB_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tpoam_lb_t__descriptor) \
    , 0, 0, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0, 0, 0, 0, 0, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL} }


struct  _Cdb__ComposeTpoamEventT
{
  ProtobufCMessage base;
  uint32_t max_count;
  ProtobufCBinaryData pst_event_cache_list;
};
#define CDB__COMPOSE_TPOAM_EVENT_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tpoam_event_t__descriptor) \
    , 0, {0,NULL} }


struct  _Cdb__ComposeTpoamStatsT
{
  ProtobufCMessage base;
  ProtobufCBinaryData tpoam_stats;
};
#define CDB__COMPOSE_TPOAM_STATS_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tpoam_stats_t__descriptor) \
    , {0,NULL} }


struct  _Cdb__ComposeTpoamListT
{
  ProtobufCMessage base;
  ProtobufCBinaryData pst_dual_lm_cache_list;
  ProtobufCBinaryData pst_dmm_cache_list;
};
#define CDB__COMPOSE_TPOAM_LIST_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tpoam_list_t__descriptor) \
    , {0,NULL}, {0,NULL} }


struct  _Cdb__ComposeTpoamRcCountT
{
  ProtobufCMessage base;
  uint32_t section_cnt;
  uint32_t megid_cnt;
  uint32_t lmep_cnt;
  uint32_t rmep_cnt;
  uint32_t mip_cnt;
  uint32_t csf_cnt;
};
#define CDB__COMPOSE_TPOAM_RC_COUNT_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tpoam_rc_count_t__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


struct  _Cdb__ComposeTpoamExecT
{
  ProtobufCMessage base;
  uint32_t exec_type;
  uint32_t session_id;
};
#define CDB__COMPOSE_TPOAM_EXEC_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tpoam_exec_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposeTpoamTrapCacheT
{
  ProtobufCMessage base;
  uint32_t tx_count;
  uint32_t peak_count;
  uint32_t max_count;
  uint32_t timer_count;
  ProtobufCBinaryData pst_cache_list;
  ProtobufCBinaryData pst_t_pending_timer;
};
#define CDB__COMPOSE_TPOAM_TRAP_CACHE_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tpoam_trap_cache_t__descriptor) \
    , 0, 0, 0, 0, {0,NULL}, {0,NULL} }


struct  _Cdb__ComposeTpoamRatelimitT
{
  ProtobufCMessage base;
  uint32_t slice;
  uint32_t token;
  ProtobufCBinaryData param;
  ProtobufCBinaryData stats;
};
#define CDB__COMPOSE_TPOAM_RATELIMIT_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tpoam_ratelimit_t__descriptor) \
    , 0, 0, {0,NULL}, {0,NULL} }


struct  _Cdb__ComposeTpoamLmmExecT
{
  ProtobufCMessage base;
  uint32_t exist;
  uint32_t service_type;
  char *service_name;
  ProtobufCBinaryData para;
};
#define CDB__COMPOSE_TPOAM_LMM_EXEC_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tpoam_lmm_exec_t__descriptor) \
    , 0, 0, NULL, {0,NULL} }


struct  _Cdb__ComposeTpoamLbExecT
{
  ProtobufCMessage base;
  uint32_t exist;
  uint32_t service_type;
  char *service_name;
  ProtobufCBinaryData para;
};
#define CDB__COMPOSE_TPOAM_LB_EXEC_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tpoam_lb_exec_t__descriptor) \
    , 0, 0, NULL, {0,NULL} }


struct  _Cdb__ComposeTpoam1dmDmmExecT
{
  ProtobufCMessage base;
  uint32_t exist;
  uint32_t service_type;
  char *service_name;
  ProtobufCBinaryData para;
};
#define CDB__COMPOSE_TPOAM_1DM_DMM_EXEC_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tpoam_1dm_dmm_exec_t__descriptor) \
    , 0, 0, NULL, {0,NULL} }


struct  _Cdb__ComposeUploadTpoamDmT
{
  ProtobufCMessage base;
  uint32_t index;
  uint32_t bit_flag;
  uint32_t delay;
  uint32_t variation;
};
#define CDB__COMPOSE_UPLOAD_TPOAM_DM_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_upload_tpoam_dm_t__descriptor) \
    , 0, 0, 0, 0 }


struct  _Cdb__ComposeUploadTpoamLmT
{
  ProtobufCMessage base;
  uint32_t index;
  uint32_t bit_flag;
  uint32_t lm_far_end_frame_loss;
  uint32_t lm_far_end_frame_loss_ratio;
  uint32_t lm_near_end_frame_loss;
  uint32_t lm_near_end_frame_loss_ratio;
};
#define CDB__COMPOSE_UPLOAD_TPOAM_LM_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_upload_tpoam_lm_t__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


struct  _Cdb__ComposeUploadTpoamCcmT
{
  ProtobufCMessage base;
  uint32_t ccm_status;
};
#define CDB__COMPOSE_UPLOAD_TPOAM_CCM_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_upload_tpoam_ccm_t__descriptor) \
    , 0 }


struct  _Cdb__ComposeGlbBoardTypeT
{
  ProtobufCMessage base;
  uint32_t series;
  uint32_t type;
};
#define CDB__COMPOSE_GLB_BOARD_TYPE_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_glb_board_type_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposeGlbStatsT
{
  ProtobufCMessage base;
  uint64_t packet_count;
  uint64_t byte_count;
};
#define CDB__COMPOSE_GLB_STATS_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_glb_stats_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposeMstiPortKeyT
{
  ProtobufCMessage base;
  char *name;
  uint32_t instance;
};
#define CDB__COMPOSE_MSTI_PORT_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_msti_port_key_t__descriptor) \
    , NULL, 0 }


struct  _Cdb__ComposeBindingKeyT
{
  ProtobufCMessage base;
  uint32_t ipv6;
  ProtobufCBinaryData mac;
  uint32_t vid;
};
#define CDB__COMPOSE_BINDING_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_binding_key_t__descriptor) \
    , 0, {0,NULL}, 0 }


struct  _Cdb__ComposeNsPortForwardingKeyT
{
  ProtobufCMessage base;
  uint32_t type;
  uint32_t proto;
  uint32_t port;
  uint32_t mapped_addr;
};
#define CDB__COMPOSE_NS_PORT_FORWARDING_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ns_port_forwarding_key_t__descriptor) \
    , 0, 0, 0, 0 }


struct  _Cdb__ComposeRouteNodeKeyT
{
  ProtobufCMessage base;
  uint32_t vrf_id;
  uint32_t family;
  uint32_t prefixlen;
  uint32_t ipv4_addr;
  size_t n_ipv6_addr;
  uint32_t *ipv6_addr;
};
#define CDB__COMPOSE_ROUTE_NODE_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_route_node_key_t__descriptor) \
    , 0, 0, 0, 0, 0,NULL }


struct  _Cdb__ComposeRouteNodeKeyWithAdT
{
  ProtobufCMessage base;
  uint32_t vrf_id;
  uint32_t family;
  uint32_t prefixlen;
  uint32_t ipv4_addr;
  size_t n_ipv6_addr;
  uint32_t *ipv6_addr;
};
#define CDB__COMPOSE_ROUTE_NODE_KEY_WITH_AD_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_route_node_key_with_ad_t__descriptor) \
    , 0, 0, 0, 0, 0,NULL }


struct  _Cdb__ComposeSummerTimeT
{
  ProtobufCMessage base;
  ProtobufCBinaryData origin_timestamp;
};
#define CDB__COMPOSE_SUMMER_TIME_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_summer_time_t__descriptor) \
    , {0,NULL} }


struct  _Cdb__ComposeWhichSummerTimeT
{
  ProtobufCMessage base;
  ProtobufCBinaryData origin_timestamp;
};
#define CDB__COMPOSE_WHICH_SUMMER_TIME_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_which_summer_time_t__descriptor) \
    , {0,NULL} }


struct  _Cdb__ComposeOspfAreaRangeKeyT
{
  ProtobufCMessage base;
  uint32_t area_id;
  uint32_t family;
  uint32_t prefixlen;
  uint32_t ipv4_addr;
  size_t n_ipv6_addr;
  uint32_t *ipv6_addr;
};
#define CDB__COMPOSE_OSPF_AREA_RANGE_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ospf_area_range_key_t__descriptor) \
    , 0, 0, 0, 0, 0,NULL }


struct  _Cdb__ComposeOspf6AreaRangeKeyT
{
  ProtobufCMessage base;
  uint32_t area_id;
  uint32_t family;
  uint32_t prefixlen;
  uint32_t ipv4_addr;
  uint32_t ipv6_addr;
};
#define CDB__COMPOSE_OSPF6_AREA_RANGE_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ospf6_area_range_key_t__descriptor) \
    , 0, 0, 0, 0, 0 }


struct  _Cdb__ComposeOspfAreaVlinkKeyT
{
  ProtobufCMessage base;
  uint32_t area_id;
  uint32_t vl_peer;
};
#define CDB__COMPOSE_OSPF_AREA_VLINK_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ospf_area_vlink_key_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposeRipTimersT
{
  ProtobufCMessage base;
  uint32_t update;
  uint32_t timeout;
  uint32_t garbage;
};
#define CDB__COMPOSE_RIP_TIMERS_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_rip_timers_t__descriptor) \
    , 0, 0, 0 }


struct  _Cdb__ComposeNexthopKeyT
{
  ProtobufCMessage base;
  uint32_t type;
  char *ifname;
  protobuf_c_boolean has_ipv4_addr;
  uint32_t ipv4_addr;
  size_t n_ipv6_addr;
  uint32_t *ipv6_addr;
};
#define CDB__COMPOSE_NEXTHOP_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_nexthop_key_t__descriptor) \
    , 0, NULL, 0,0, 0,NULL }


struct  _Cdb__ComposeAddrIpv4T
{
  ProtobufCMessage base;
  uint32_t ipv4_addr;
};
#define CDB__COMPOSE_ADDR_IPV4_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_addr_ipv4_t__descriptor) \
    , 0 }


struct  _Cdb__ComposeAddrIpv6T
{
  ProtobufCMessage base;
  uint32_t ipv6_addr;
};
#define CDB__COMPOSE_ADDR_IPV6_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_addr_ipv6_t__descriptor) \
    , 0 }


struct  _Cdb__ComposePrefixIpv4T
{
  ProtobufCMessage base;
  uint32_t family;
  uint32_t prefixlen;
  uint32_t ipv4_addr;
};
#define CDB__COMPOSE_PREFIX_IPV4_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_prefix_ipv4_t__descriptor) \
    , 0, 0, 0 }


struct  _Cdb__ComposePrefixT
{
  ProtobufCMessage base;
  uint32_t family;
  uint32_t prefixlen;
  uint32_t ipv4_addr;
  size_t n_ipv6_addr;
  uint32_t *ipv6_addr;
};
#define CDB__COMPOSE_PREFIX_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_prefix_t__descriptor) \
    , 0, 0, 0, 0,NULL }


struct  _Cdb__ComposeMstpBrgIdT
{
  ProtobufCMessage base;
  uint32_t priority;
  ProtobufCBinaryData address;
};
#define CDB__COMPOSE_MSTP_BRG_ID_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_mstp_brg_id_t__descriptor) \
    , 0, {0,NULL} }


struct  _Cdb__ComposeSalTimeT
{
  ProtobufCMessage base;
  uint32_t time;
};
#define CDB__COMPOSE_SAL_TIME_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_sal_time_t__descriptor) \
    , 0 }


struct  _Cdb__ComposeTimeRangeValueT
{
  ProtobufCMessage base;
  uint32_t type;
  protobuf_c_boolean has_absolute_start;
  int32_t absolute_start;
  protobuf_c_boolean has_absolute_end;
  int32_t absolute_end;
  protobuf_c_boolean has_periodic_start_day;
  int32_t periodic_start_day;
  protobuf_c_boolean has_periodic_start_hour;
  int32_t periodic_start_hour;
  protobuf_c_boolean has_periodic_start_min;
  int32_t periodic_start_min;
  protobuf_c_boolean has_periodic_end_day;
  int32_t periodic_end_day;
  protobuf_c_boolean has_periodic_end_hour;
  int32_t periodic_end_hour;
  protobuf_c_boolean has_periodic_end_min;
  int32_t periodic_end_min;
};
#define CDB__COMPOSE_TIME_RANGE_VALUE_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_time_range_value_t__descriptor) \
    , 0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _Cdb__ComposeTimeRangeTimerT
{
  ProtobufCMessage base;
  uint32_t status;
};
#define CDB__COMPOSE_TIME_RANGE_TIMER_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_time_range_timer_t__descriptor) \
    , 0 }


struct  _Cdb__ComposeSnmpTrapKeyT
{
  ProtobufCMessage base;
  Cdb__ComposeAddrT *ip_addr;
  char *community;
  uint32_t udpport;
};
#define CDB__COMPOSE_SNMP_TRAP_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_snmp_trap_key_t__descriptor) \
    , NULL, NULL, 0 }


struct  _Cdb__ComposeSnmpViewKeyT
{
  ProtobufCMessage base;
  char *name;
  uint32_t type;
  char *subtree;
};
#define CDB__COMPOSE_SNMP_VIEW_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_snmp_view_key_t__descriptor) \
    , NULL, 0, NULL }


struct  _Cdb__ComposeSnmpGroupUsmKeyT
{
  ProtobufCMessage base;
  char *grp_name;
  char *security_name;
};
#define CDB__COMPOSE_SNMP_GROUP_USM_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_snmp_group_usm_key_t__descriptor) \
    , NULL, NULL }


struct  _Cdb__ComposeSnmpInformKeyT
{
  ProtobufCMessage base;
  Cdb__ComposeAddrT *ip_addr;
  char *community;
  uint32_t udpport;
};
#define CDB__COMPOSE_SNMP_INFORM_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_snmp_inform_key_t__descriptor) \
    , NULL, NULL, 0 }


struct  _Cdb__ComposeAddrT
{
  ProtobufCMessage base;
  uint32_t family;
  uint32_t ipv4_addr;
  size_t n_ipv6_addr;
  uint32_t *ipv6_addr;
};
#define CDB__COMPOSE_ADDR_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_addr_t__descriptor) \
    , 0, 0, 0,NULL }


struct  _Cdb__ComposeSnmpInfoT
{
  ProtobufCMessage base;
  char *info;
};
#define CDB__COMPOSE_SNMP_INFO_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_snmp_info_t__descriptor) \
    , NULL }


struct  _Cdb__ComposeUserT
{
  ProtobufCMessage base;
  char *name;
};
#define CDB__COMPOSE_USER_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_user_t__descriptor) \
    , NULL }


struct  _Cdb__ComposeRsaKeystrT
{
  ProtobufCMessage base;
  ProtobufCBinaryData rsa;
};
#define CDB__COMPOSE_RSA_KEYSTR_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_rsa_keystr_t__descriptor) \
    , {0,NULL} }


struct  _Cdb__ComposeTimestampT
{
  ProtobufCMessage base;
  uint32_t tv_sec;
  uint32_t tv_usec;
};
#define CDB__COMPOSE_TIMESTAMP_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_timestamp_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposeMailT
{
  ProtobufCMessage base;
  char *server;
  char *from;
  char *to;
  char *cc;
  char *subject;
  char *body;
  char *attach;
};
#define CDB__COMPOSE_MAIL_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_mail_t__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _Cdb__ComposeGlbFlowL4PortT
{
  ProtobufCMessage base;
  uint32_t operator_;
  uint32_t port;
  uint32_t port2;
};
#define CDB__COMPOSE_GLB_FLOW_L4_PORT_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_glb_flow_l4_port_t__descriptor) \
    , 0, 0, 0 }


struct  _Cdb__ComposeGlbFlowTcpFlagT
{
  ProtobufCMessage base;
  uint32_t operator_;
  uint32_t tcp_flags;
};
#define CDB__COMPOSE_GLB_FLOW_TCP_FLAG_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_glb_flow_tcp_flag_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposeNexthopEcmpT
{
  ProtobufCMessage base;
  uint32_t nh_num;
  size_t n_nh;
  Cdb__ComposeNexthopKeyT **nh;
};
#define CDB__COMPOSE_NEXTHOP_ECMP_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_nexthop_ecmp_t__descriptor) \
    , 0, 0,NULL }


struct  _Cdb__ComposeNexthopEcmpRoutedT
{
  ProtobufCMessage base;
  uint32_t nh_num;
  size_t n_nh;
  Cdb__ComposeNexthopKeyT **nh;
};
#define CDB__COMPOSE_NEXTHOP_ECMP_ROUTED_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_nexthop_ecmp_routed_t__descriptor) \
    , 0, 0,NULL }


struct  _Cdb__ComposeAceConfigKeyT
{
  ProtobufCMessage base;
  char *acl_name;
  uint32_t seq_no;
};
#define CDB__COMPOSE_ACE_CONFIG_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ace_config_key_t__descriptor) \
    , NULL, 0 }


struct  _Cdb__ComposeLldpMsapIdT
{
  ProtobufCMessage base;
  uint32_t chassis_id_type;
  ProtobufCBinaryData chassis_id;
  uint32_t port_id_type;
  ProtobufCBinaryData port_id;
};
#define CDB__COMPOSE_LLDP_MSAP_ID_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_lldp_msap_id_t__descriptor) \
    , 0, {0,NULL}, 0, {0,NULL} }


struct  _Cdb__ComposePtpForeignMasterT
{
  ProtobufCMessage base;
  uint32_t foreign_master_port_identity_type;
  ProtobufCBinaryData foreign_master_port_identity;
  char *name;
};
#define CDB__COMPOSE_PTP_FOREIGN_MASTER_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_foreign_master_t__descriptor) \
    , 0, {0,NULL}, NULL }


struct  _Cdb__ComposePtpResidenceTimeCacheT
{
  ProtobufCMessage base;
  uint32_t foreign_master_port_identity_type;
};
#define CDB__COMPOSE_PTP_RESIDENCE_TIME_CACHE_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ptp_residence_time_cache_t__descriptor) \
    , 0 }


struct  _Cdb__ComposeErpsRingKeyT
{
  ProtobufCMessage base;
  uint32_t domain_id;
  uint32_t ring_id;
};
#define CDB__COMPOSE_ERPS_RING_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_erps_ring_key_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposeClassInPolicyConfigKeyT
{
  ProtobufCMessage base;
  char *policy_name;
  char *class_name;
};
#define CDB__COMPOSE_CLASS_IN_POLICY_CONFIG_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_class_in_policy_config_key_t__descriptor) \
    , NULL, NULL }


struct  _Cdb__ComposeAclInClassConfigKeyT
{
  ProtobufCMessage base;
  char *class_name;
  char *acl_name;
};
#define CDB__COMPOSE_ACL_IN_CLASS_CONFIG_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_acl_in_class_config_key_t__descriptor) \
    , NULL, NULL }


struct  _Cdb__ComposeClassMapActionConfigKeyT
{
  ProtobufCMessage base;
  char *policy_name;
  char *class_name;
};
#define CDB__COMPOSE_CLASS_MAP_ACTION_CONFIG_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_class_map_action_config_key_t__descriptor) \
    , NULL, NULL }


struct  _Cdb__ComposeTapGroupIngressKeyT
{
  ProtobufCMessage base;
  char *tap_group;
  char *if_name;
};
#define CDB__COMPOSE_TAP_GROUP_INGRESS_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tap_group_ingress_key_t__descriptor) \
    , NULL, NULL }


struct  _Cdb__ComposeTapGroupIngressFlowKeyT
{
  ProtobufCMessage base;
  char *tap_group;
  char *if_name;
  char *flow_name;
};
#define CDB__COMPOSE_TAP_GROUP_INGRESS_FLOW_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tap_group_ingress_flow_key_t__descriptor) \
    , NULL, NULL, NULL }


struct  _Cdb__ComposeTapGroupEgressKeyT
{
  ProtobufCMessage base;
  char *tap_group;
  char *if_name;
};
#define CDB__COMPOSE_TAP_GROUP_EGRESS_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tap_group_egress_key_t__descriptor) \
    , NULL, NULL }


struct  _Cdb__ComposeTapFiveTupleKeyT
{
  ProtobufCMessage base;
  uint32_t ip_sa;
  uint32_t ip_da;
  uint32_t l4_src_port;
  uint32_t l4_dst_port;
  uint32_t l4_protocol;
};
#define CDB__COMPOSE_TAP_FIVE_TUPLE_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tap_five_tuple_key_t__descriptor) \
    , 0, 0, 0, 0, 0 }


struct  _Cdb__ComposeTapTupleAclEntryIdT
{
  ProtobufCMessage base;
  ProtobufCBinaryData origin_timestamp;
};
#define CDB__COMPOSE_TAP_TUPLE_ACL_ENTRY_ID_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_tap_tuple_acl_entry_id_t__descriptor) \
    , {0,NULL} }


struct  _Cdb__ComposeAuthServerKeyT
{
  ProtobufCMessage base;
  Cdb__ComposePrefixT *addr;
  uint32_t type;
};
#define CDB__COMPOSE_AUTH_SERVER_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_auth_server_key_t__descriptor) \
    , NULL, 0 }


struct  _Cdb__ComposeAuthSessionKeyT
{
  ProtobufCMessage base;
  char *name;
  uint32_t index;
  uint32_t type;
};
#define CDB__COMPOSE_AUTH_SESSION_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_auth_session_key_t__descriptor) \
    , NULL, 0, 0 }


struct  _Cdb__ComposeLldpCivicAddressT
{
  ProtobufCMessage base;
  uint32_t len;
  uint32_t what;
  uint32_t ca_num;
  char *countrycode;
  char *ca_value;
  char *ca_type;
  char *ca_length;
};
#define CDB__COMPOSE_LLDP_CIVIC_ADDRESS_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_lldp_civic_address_t__descriptor) \
    , 0, 0, 0, NULL, NULL, NULL, NULL }


struct  _Cdb__ComposeFeaG8032RingKeyT
{
  ProtobufCMessage base;
  uint32_t vlan_id;
  uint32_t ifindex;
};
#define CDB__COMPOSE_FEA_G8032_RING_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_fea_g8032_ring_key_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposeIgspGroupKeyT
{
  ProtobufCMessage base;
  uint32_t ip;
  uint32_t vid;
};
#define CDB__COMPOSE_IGSP_GROUP_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_igsp_group_key_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposeDot1xRadiusKeyT
{
  ProtobufCMessage base;
  Cdb__ComposePrefixT *addr;
  uint32_t sin_port;
};
#define CDB__COMPOSE_DOT1X_RADIUS_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_dot1x_radius_key_t__descriptor) \
    , NULL, 0 }


struct  _Cdb__ComposeDeadRadiusKeyT
{
  ProtobufCMessage base;
  Cdb__ComposePrefixT *addr;
  uint32_t sin_port;
  uint32_t ifindex;
};
#define CDB__COMPOSE_DEAD_RADIUS_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_dead_radius_key_t__descriptor) \
    , NULL, 0, 0 }


struct  _Cdb__ComposeDot1xMacKeyT
{
  ProtobufCMessage base;
  uint32_t ifindex;
  ProtobufCBinaryData mac;
};
#define CDB__COMPOSE_DOT1X_MAC_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_dot1x_mac_key_t__descriptor) \
    , 0, {0,NULL} }


struct  _Cdb__ComposeMirrorMacEscapeKeyT
{
  ProtobufCMessage base;
  ProtobufCBinaryData mac;
  ProtobufCBinaryData mask;
};
#define CDB__COMPOSE_MIRROR_MAC_ESCAPE_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_mirror_mac_escape_key_t__descriptor) \
    , {0,NULL}, {0,NULL} }


struct  _Cdb__ComposeNsRouteKeyT
{
  ProtobufCMessage base;
  uint32_t port;
  uint32_t proto;
  uint32_t family;
  uint32_t ipv4_addr;
  size_t n_ipv6_addr;
  uint32_t *ipv6_addr;
};
#define CDB__COMPOSE_NS_ROUTE_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ns_route_key_t__descriptor) \
    , 0, 0, 0, 0, 0,NULL }


struct  _Cdb__ComposeOpenflowManagerKeyT
{
  ProtobufCMessage base;
  uint32_t ip;
  uint32_t port;
  uint32_t proto;
};
#define CDB__COMPOSE_OPENFLOW_MANAGER_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_openflow_manager_key_t__descriptor) \
    , 0, 0, 0 }


struct  _Cdb__ComposeGlbPtpPortIdT
{
  ProtobufCMessage base;
  char *clock_id;
  uint32_t port_num;
};
#define CDB__COMPOSE_GLB_PTP_PORT_ID_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_glb_ptp_port_id_t__descriptor) \
    , NULL, 0 }


struct  _Cdb__ComposeInbandSnatKeyT
{
  ProtobufCMessage base;
  uint32_t ip;
  uint32_t port;
  uint32_t proto;
};
#define CDB__COMPOSE_INBAND_SNAT_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_inband_snat_key_t__descriptor) \
    , 0, 0, 0 }


struct  _Cdb__ComposeArpaceConfigKeyT
{
  ProtobufCMessage base;
  char *arpacl_name;
  uint32_t seq_no;
};
#define CDB__COMPOSE_ARPACE_CONFIG_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_arpace_config_key_t__descriptor) \
    , NULL, 0 }


struct  _Cdb__ComposeSflowCollectorKeyT
{
  ProtobufCMessage base;
  Cdb__ComposePrefixT *addr;
  uint32_t udp_port;
};
#define CDB__COMPOSE_SFLOW_COLLECTOR_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_sflow_collector_key_t__descriptor) \
    , NULL, 0 }


struct  _Cdb__ComposeVrrpVmacKeyT
{
  ProtobufCMessage base;
  uint32_t ifindex;
  ProtobufCBinaryData mac;
};
#define CDB__COMPOSE_VRRP_VMAC_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_vrrp_vmac_key_t__descriptor) \
    , 0, {0,NULL} }


struct  _Cdb__ComposeSsmClockIdT
{
  ProtobufCMessage base;
  ProtobufCBinaryData mac;
};
#define CDB__COMPOSE_SSM_CLOCK_ID_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ssm_clock_id_t__descriptor) \
    , {0,NULL} }


struct  _Cdb__ComposeRmonStatsHistoryKeyT
{
  ProtobufCMessage base;
  uint32_t history_index;
  uint32_t stats_index;
};
#define CDB__COMPOSE_RMON_STATS_HISTORY_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_rmon_stats_history_key_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposeIpslaPacketStatsKeyT
{
  ProtobufCMessage base;
  uint32_t entry_id;
  uint32_t packet_index;
};
#define CDB__COMPOSE_IPSLA_PACKET_STATS_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ipsla_packet_stats_key_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposeIpslaTestStatsKeyT
{
  ProtobufCMessage base;
  uint32_t entry_id;
  uint32_t test_index;
};
#define CDB__COMPOSE_IPSLA_TEST_STATS_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ipsla_test_stats_key_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposeMrtKeyT
{
  ProtobufCMessage base;
  uint32_t vrf_id;
  uint32_t source;
  uint32_t group;
};
#define CDB__COMPOSE_MRT_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_mrt_key_t__descriptor) \
    , 0, 0, 0 }


struct  _Cdb__ComposeVlanMappingEntryKeyT
{
  ProtobufCMessage base;
  uint32_t raw_vid;
  char *table_name;
};
#define CDB__COMPOSE_VLAN_MAPPING_ENTRY_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_vlan_mapping_entry_key_t__descriptor) \
    , 0, NULL }


struct  _Cdb__ComposeEgressMappingEntryKeyT
{
  ProtobufCMessage base;
  uint32_t raw_cvid;
  uint32_t raw_svid;
  char *table_name;
};
#define CDB__COMPOSE_EGRESS_MAPPING_ENTRY_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_egress_mapping_entry_key_t__descriptor) \
    , 0, 0, NULL }


struct  _Cdb__ComposeMappedVlanInfoKeyT
{
  ProtobufCMessage base;
  char *evc_name;
  char *table_name;
};
#define CDB__COMPOSE_MAPPED_VLAN_INFO_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_mapped_vlan_info_key_t__descriptor) \
    , NULL, NULL }


struct  _Cdb__ComposeNdPrefixKeyT
{
  ProtobufCMessage base;
  Cdb__ComposePrefixT *addr;
  uint32_t ifindex;
};
#define CDB__COMPOSE_ND_PREFIX_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_nd_prefix_key_t__descriptor) \
    , NULL, 0 }


struct  _Cdb__ComposeL2proIfActionVlanT
{
  ProtobufCMessage base;
  uint32_t l2action;
  uint32_t l2vlan;
};
#define CDB__COMPOSE_L2PRO_IF_ACTION_VLAN_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_l2pro_if_action_vlan_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposeGlbQosColorActionT
{
  ProtobufCMessage base;
  uint32_t drop_packet;
  uint32_t tc_valid;
  uint32_t tc;
};
#define CDB__COMPOSE_GLB_QOS_COLOR_ACTION_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_glb_qos_color_action_t__descriptor) \
    , 0, 0, 0 }


struct  _Cdb__ComposeQosPolicerResKeyT
{
  ProtobufCMessage base;
  uint32_t cir;
  uint32_t eir;
  uint32_t cbs;
  uint32_t ebs;
  uint32_t mode;
  uint32_t pps_en;
  uint32_t direct;
  uint32_t type;
};
#define CDB__COMPOSE_QOS_POLICER_RES_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_qos_policer_res_key_t__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _Cdb__ComposeL2editKeyT
{
  ProtobufCMessage base;
  ProtobufCBinaryData src_mac;
  ProtobufCBinaryData dest_mac;
  uint32_t vid;
};
#define CDB__COMPOSE_L2EDIT_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_l2edit_key_t__descriptor) \
    , {0,NULL}, {0,NULL}, 0 }


struct  _Cdb__ComposeCtclibOpbT
{
  ProtobufCMessage base;
  uint32_t data;
  uint32_t words;
  uint32_t start_offset;
  uint32_t max_size;
  char *desc;
};
#define CDB__COMPOSE_CTCLIB_OPB_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_ctclib_opb_t__descriptor) \
    , 0, 0, 0, 0, NULL }


struct  _Cdb__ComposeNatRuleKeyT
{
  ProtobufCMessage base;
  uint32_t flags;
  Cdb__ComposeAddrT *in_local_ip;
  uint32_t in_local_port;
  Cdb__ComposeAddrT *in_glb_ip;
  uint32_t in_glb_port;
  uint32_t in_glb_port_hi;
  uint32_t out_ifindex;
  char *acl;
  uint32_t protocol;
  char *pool;
};
#define CDB__COMPOSE_NAT_RULE_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_nat_rule_key_t__descriptor) \
    , 0, NULL, 0, NULL, 0, 0, 0, NULL, 0, NULL }


struct  _Cdb__ComposeNatSessionKeyT
{
  ProtobufCMessage base;
  Cdb__ComposeAddrT *inside_local_ip;
  Cdb__ComposeAddrT *inside_global_ip;
  Cdb__ComposeAddrT *outside_local_ip;
  Cdb__ComposeAddrT *outside_global_ip;
  uint32_t protocol;
  uint32_t inside_local_port;
  uint32_t inside_global_port;
  uint32_t outside_local_port;
  uint32_t outside_global_port;
};
#define CDB__COMPOSE_NAT_SESSION_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_nat_session_key_t__descriptor) \
    , NULL, NULL, NULL, NULL, 0, 0, 0, 0, 0 }


struct  _Cdb__ComposeNatProxyArpKeyT
{
  ProtobufCMessage base;
  uint32_t ifindex;
  Cdb__ComposeAddrT *inside_global_ip;
};
#define CDB__COMPOSE_NAT_PROXY_ARP_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_nat_proxy_arp_key_t__descriptor) \
    , 0, NULL }


struct  _Cdb__ComposeGlbPoeCfgT
{
  ProtobufCMessage base;
  ProtobufCBinaryData enable;
  ProtobufCBinaryData force_power;
  uint32_t mode;
  ProtobufCBinaryData priority;
  uint32_t power_limit;
};
#define CDB__COMPOSE_GLB_POE_CFG_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_glb_poe_cfg_t__descriptor) \
    , {0,NULL}, {0,NULL}, 0, {0,NULL}, 0 }


struct  _Cdb__ComposeCfmMaKeyT
{
  ProtobufCMessage base;
  uint32_t vid;
  char *md_name;
};
#define CDB__COMPOSE_CFM_MA_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_cfm_ma_key_t__descriptor) \
    , 0, NULL }


struct  _Cdb__ComposeCfmLmepKeyT
{
  ProtobufCMessage base;
  uint32_t level;
  uint32_t vid;
  uint32_t ifindex;
};
#define CDB__COMPOSE_CFM_LMEP_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_cfm_lmep_key_t__descriptor) \
    , 0, 0, 0 }


struct  _Cdb__ComposeCfmRmepKeyT
{
  ProtobufCMessage base;
  uint32_t level;
  uint32_t vid;
  uint32_t rmep_id;
};
#define CDB__COMPOSE_CFM_RMEP_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_cfm_rmep_key_t__descriptor) \
    , 0, 0, 0 }


struct  _Cdb__ComposeCfmTimeKeyT
{
  ProtobufCMessage base;
  uint32_t time;
  uint32_t seq;
};
#define CDB__COMPOSE_CFM_TIME_KEY_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_cfm_time_key_t__descriptor) \
    , 0, 0 }


struct  _Cdb__ComposePimSmGprefixT
{
  ProtobufCMessage base;
  char *ip;
  uint32_t masklen;
};
#define CDB__COMPOSE_PIM_SM_GPREFIX_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_pim_sm_gprefix_t__descriptor) \
    , NULL, 0 }


struct  _Cdb__ComposePimStaticRpAddrT
{
  ProtobufCMessage base;
  char *ip;
  char *group;
  uint32_t masklen;
};
#define CDB__COMPOSE_PIM_STATIC_RP_ADDR_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cdb__compose_pim_static_rp_addr_t__descriptor) \
    , NULL, NULL, 0 }


/* Cdb__SubscribeRequestCdb methods */
void   cdb__subscribe_request_cdb__init
                     (Cdb__SubscribeRequestCdb         *message);
size_t cdb__subscribe_request_cdb__get_packed_size
                     (const Cdb__SubscribeRequestCdb   *message);
size_t cdb__subscribe_request_cdb__pack
                     (const Cdb__SubscribeRequestCdb   *message,
                      uint8_t             *out);
size_t cdb__subscribe_request_cdb__pack_to_buffer
                     (const Cdb__SubscribeRequestCdb   *message,
                      ProtobufCBuffer     *buffer);
Cdb__SubscribeRequestCdb *
       cdb__subscribe_request_cdb__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__subscribe_request_cdb__free_unpacked
                     (Cdb__SubscribeRequestCdb *message,
                      ProtobufCAllocator *allocator);
/* Cdb__SubscribeRequestTbl methods */
void   cdb__subscribe_request_tbl__init
                     (Cdb__SubscribeRequestTbl         *message);
size_t cdb__subscribe_request_tbl__get_packed_size
                     (const Cdb__SubscribeRequestTbl   *message);
size_t cdb__subscribe_request_tbl__pack
                     (const Cdb__SubscribeRequestTbl   *message,
                      uint8_t             *out);
size_t cdb__subscribe_request_tbl__pack_to_buffer
                     (const Cdb__SubscribeRequestTbl   *message,
                      ProtobufCBuffer     *buffer);
Cdb__SubscribeRequestTbl *
       cdb__subscribe_request_tbl__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__subscribe_request_tbl__free_unpacked
                     (Cdb__SubscribeRequestTbl *message,
                      ProtobufCAllocator *allocator);
/* Cdb__SubscribeRequest methods */
void   cdb__subscribe_request__init
                     (Cdb__SubscribeRequest         *message);
size_t cdb__subscribe_request__get_packed_size
                     (const Cdb__SubscribeRequest   *message);
size_t cdb__subscribe_request__pack
                     (const Cdb__SubscribeRequest   *message,
                      uint8_t             *out);
size_t cdb__subscribe_request__pack_to_buffer
                     (const Cdb__SubscribeRequest   *message,
                      ProtobufCBuffer     *buffer);
Cdb__SubscribeRequest *
       cdb__subscribe_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__subscribe_request__free_unpacked
                     (Cdb__SubscribeRequest *message,
                      ProtobufCAllocator *allocator);
/* Cdb__SubscribeResponse methods */
void   cdb__subscribe_response__init
                     (Cdb__SubscribeResponse         *message);
size_t cdb__subscribe_response__get_packed_size
                     (const Cdb__SubscribeResponse   *message);
size_t cdb__subscribe_response__pack
                     (const Cdb__SubscribeResponse   *message,
                      uint8_t             *out);
size_t cdb__subscribe_response__pack_to_buffer
                     (const Cdb__SubscribeResponse   *message,
                      ProtobufCBuffer     *buffer);
Cdb__SubscribeResponse *
       cdb__subscribe_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__subscribe_response__free_unpacked
                     (Cdb__SubscribeResponse *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeMacAddrT methods */
void   cdb__compose_mac_addr_t__init
                     (Cdb__ComposeMacAddrT         *message);
size_t cdb__compose_mac_addr_t__get_packed_size
                     (const Cdb__ComposeMacAddrT   *message);
size_t cdb__compose_mac_addr_t__pack
                     (const Cdb__ComposeMacAddrT   *message,
                      uint8_t             *out);
size_t cdb__compose_mac_addr_t__pack_to_buffer
                     (const Cdb__ComposeMacAddrT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeMacAddrT *
       cdb__compose_mac_addr_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_mac_addr_t__free_unpacked
                     (Cdb__ComposeMacAddrT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeFdbKeyT methods */
void   cdb__compose_fdb_key_t__init
                     (Cdb__ComposeFdbKeyT         *message);
size_t cdb__compose_fdb_key_t__get_packed_size
                     (const Cdb__ComposeFdbKeyT   *message);
size_t cdb__compose_fdb_key_t__pack
                     (const Cdb__ComposeFdbKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_fdb_key_t__pack_to_buffer
                     (const Cdb__ComposeFdbKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeFdbKeyT *
       cdb__compose_fdb_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_fdb_key_t__free_unpacked
                     (Cdb__ComposeFdbKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeMstpDigestT methods */
void   cdb__compose_mstp_digest_t__init
                     (Cdb__ComposeMstpDigestT         *message);
size_t cdb__compose_mstp_digest_t__get_packed_size
                     (const Cdb__ComposeMstpDigestT   *message);
size_t cdb__compose_mstp_digest_t__pack
                     (const Cdb__ComposeMstpDigestT   *message,
                      uint8_t             *out);
size_t cdb__compose_mstp_digest_t__pack_to_buffer
                     (const Cdb__ComposeMstpDigestT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeMstpDigestT *
       cdb__compose_mstp_digest_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_mstp_digest_t__free_unpacked
                     (Cdb__ComposeMstpDigestT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeBrgAllowedVlanT methods */
void   cdb__compose_brg_allowed_vlan_t__init
                     (Cdb__ComposeBrgAllowedVlanT         *message);
size_t cdb__compose_brg_allowed_vlan_t__get_packed_size
                     (const Cdb__ComposeBrgAllowedVlanT   *message);
size_t cdb__compose_brg_allowed_vlan_t__pack
                     (const Cdb__ComposeBrgAllowedVlanT   *message,
                      uint8_t             *out);
size_t cdb__compose_brg_allowed_vlan_t__pack_to_buffer
                     (const Cdb__ComposeBrgAllowedVlanT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeBrgAllowedVlanT *
       cdb__compose_brg_allowed_vlan_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_brg_allowed_vlan_t__free_unpacked
                     (Cdb__ComposeBrgAllowedVlanT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpCommonMessageHeaderT methods */
void   cdb__compose_ptp_common_message_header_t__init
                     (Cdb__ComposePtpCommonMessageHeaderT         *message);
size_t cdb__compose_ptp_common_message_header_t__get_packed_size
                     (const Cdb__ComposePtpCommonMessageHeaderT   *message);
size_t cdb__compose_ptp_common_message_header_t__pack
                     (const Cdb__ComposePtpCommonMessageHeaderT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_common_message_header_t__pack_to_buffer
                     (const Cdb__ComposePtpCommonMessageHeaderT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpCommonMessageHeaderT *
       cdb__compose_ptp_common_message_header_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_common_message_header_t__free_unpacked
                     (Cdb__ComposePtpCommonMessageHeaderT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpMsgAnnounceT methods */
void   cdb__compose_ptp_msg_announce_t__init
                     (Cdb__ComposePtpMsgAnnounceT         *message);
size_t cdb__compose_ptp_msg_announce_t__get_packed_size
                     (const Cdb__ComposePtpMsgAnnounceT   *message);
size_t cdb__compose_ptp_msg_announce_t__pack
                     (const Cdb__ComposePtpMsgAnnounceT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_msg_announce_t__pack_to_buffer
                     (const Cdb__ComposePtpMsgAnnounceT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpMsgAnnounceT *
       cdb__compose_ptp_msg_announce_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_msg_announce_t__free_unpacked
                     (Cdb__ComposePtpMsgAnnounceT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpDefaultT methods */
void   cdb__compose_ptp_default_t__init
                     (Cdb__ComposePtpDefaultT         *message);
size_t cdb__compose_ptp_default_t__get_packed_size
                     (const Cdb__ComposePtpDefaultT   *message);
size_t cdb__compose_ptp_default_t__pack
                     (const Cdb__ComposePtpDefaultT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_default_t__pack_to_buffer
                     (const Cdb__ComposePtpDefaultT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpDefaultT *
       cdb__compose_ptp_default_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_default_t__free_unpacked
                     (Cdb__ComposePtpDefaultT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpCurrentT methods */
void   cdb__compose_ptp_current_t__init
                     (Cdb__ComposePtpCurrentT         *message);
size_t cdb__compose_ptp_current_t__get_packed_size
                     (const Cdb__ComposePtpCurrentT   *message);
size_t cdb__compose_ptp_current_t__pack
                     (const Cdb__ComposePtpCurrentT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_current_t__pack_to_buffer
                     (const Cdb__ComposePtpCurrentT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpCurrentT *
       cdb__compose_ptp_current_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_current_t__free_unpacked
                     (Cdb__ComposePtpCurrentT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpParentT methods */
void   cdb__compose_ptp_parent_t__init
                     (Cdb__ComposePtpParentT         *message);
size_t cdb__compose_ptp_parent_t__get_packed_size
                     (const Cdb__ComposePtpParentT   *message);
size_t cdb__compose_ptp_parent_t__pack
                     (const Cdb__ComposePtpParentT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_parent_t__pack_to_buffer
                     (const Cdb__ComposePtpParentT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpParentT *
       cdb__compose_ptp_parent_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_parent_t__free_unpacked
                     (Cdb__ComposePtpParentT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpTimePropertiesT methods */
void   cdb__compose_ptp_time_properties_t__init
                     (Cdb__ComposePtpTimePropertiesT         *message);
size_t cdb__compose_ptp_time_properties_t__get_packed_size
                     (const Cdb__ComposePtpTimePropertiesT   *message);
size_t cdb__compose_ptp_time_properties_t__pack
                     (const Cdb__ComposePtpTimePropertiesT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_time_properties_t__pack_to_buffer
                     (const Cdb__ComposePtpTimePropertiesT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpTimePropertiesT *
       cdb__compose_ptp_time_properties_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_time_properties_t__free_unpacked
                     (Cdb__ComposePtpTimePropertiesT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpGlobalCT methods */
void   cdb__compose_ptp_global_c_t__init
                     (Cdb__ComposePtpGlobalCT         *message);
size_t cdb__compose_ptp_global_c_t__get_packed_size
                     (const Cdb__ComposePtpGlobalCT   *message);
size_t cdb__compose_ptp_global_c_t__pack
                     (const Cdb__ComposePtpGlobalCT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_global_c_t__pack_to_buffer
                     (const Cdb__ComposePtpGlobalCT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpGlobalCT *
       cdb__compose_ptp_global_c_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_global_c_t__free_unpacked
                     (Cdb__ComposePtpGlobalCT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpPortT methods */
void   cdb__compose_ptp_port_t__init
                     (Cdb__ComposePtpPortT         *message);
size_t cdb__compose_ptp_port_t__get_packed_size
                     (const Cdb__ComposePtpPortT   *message);
size_t cdb__compose_ptp_port_t__pack
                     (const Cdb__ComposePtpPortT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_port_t__pack_to_buffer
                     (const Cdb__ComposePtpPortT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpPortT *
       cdb__compose_ptp_port_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_port_t__free_unpacked
                     (Cdb__ComposePtpPortT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeGlbPtpPortAddressT methods */
void   cdb__compose_glb_ptp_port_address_t__init
                     (Cdb__ComposeGlbPtpPortAddressT         *message);
size_t cdb__compose_glb_ptp_port_address_t__get_packed_size
                     (const Cdb__ComposeGlbPtpPortAddressT   *message);
size_t cdb__compose_glb_ptp_port_address_t__pack
                     (const Cdb__ComposeGlbPtpPortAddressT   *message,
                      uint8_t             *out);
size_t cdb__compose_glb_ptp_port_address_t__pack_to_buffer
                     (const Cdb__ComposeGlbPtpPortAddressT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeGlbPtpPortAddressT *
       cdb__compose_glb_ptp_port_address_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_glb_ptp_port_address_t__free_unpacked
                     (Cdb__ComposeGlbPtpPortAddressT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeGlbPtpTimeintervalT methods */
void   cdb__compose_glb_ptp_timeinterval_t__init
                     (Cdb__ComposeGlbPtpTimeintervalT         *message);
size_t cdb__compose_glb_ptp_timeinterval_t__get_packed_size
                     (const Cdb__ComposeGlbPtpTimeintervalT   *message);
size_t cdb__compose_glb_ptp_timeinterval_t__pack
                     (const Cdb__ComposeGlbPtpTimeintervalT   *message,
                      uint8_t             *out);
size_t cdb__compose_glb_ptp_timeinterval_t__pack_to_buffer
                     (const Cdb__ComposeGlbPtpTimeintervalT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeGlbPtpTimeintervalT *
       cdb__compose_glb_ptp_timeinterval_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_glb_ptp_timeinterval_t__free_unpacked
                     (Cdb__ComposeGlbPtpTimeintervalT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpDumpFlagT methods */
void   cdb__compose_ptp_dump_flag_t__init
                     (Cdb__ComposePtpDumpFlagT         *message);
size_t cdb__compose_ptp_dump_flag_t__get_packed_size
                     (const Cdb__ComposePtpDumpFlagT   *message);
size_t cdb__compose_ptp_dump_flag_t__pack
                     (const Cdb__ComposePtpDumpFlagT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_dump_flag_t__pack_to_buffer
                     (const Cdb__ComposePtpDumpFlagT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpDumpFlagT *
       cdb__compose_ptp_dump_flag_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_dump_flag_t__free_unpacked
                     (Cdb__ComposePtpDumpFlagT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpVlanInfoT methods */
void   cdb__compose_ptp_vlan_info_t__init
                     (Cdb__ComposePtpVlanInfoT         *message);
size_t cdb__compose_ptp_vlan_info_t__get_packed_size
                     (const Cdb__ComposePtpVlanInfoT   *message);
size_t cdb__compose_ptp_vlan_info_t__pack
                     (const Cdb__ComposePtpVlanInfoT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_vlan_info_t__pack_to_buffer
                     (const Cdb__ComposePtpVlanInfoT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpVlanInfoT *
       cdb__compose_ptp_vlan_info_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_vlan_info_t__free_unpacked
                     (Cdb__ComposePtpVlanInfoT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpPortPT methods */
void   cdb__compose_ptp_port_p_t__init
                     (Cdb__ComposePtpPortPT         *message);
size_t cdb__compose_ptp_port_p_t__get_packed_size
                     (const Cdb__ComposePtpPortPT   *message);
size_t cdb__compose_ptp_port_p_t__pack
                     (const Cdb__ComposePtpPortPT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_port_p_t__pack_to_buffer
                     (const Cdb__ComposePtpPortPT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpPortPT *
       cdb__compose_ptp_port_p_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_port_p_t__free_unpacked
                     (Cdb__ComposePtpPortPT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpPortCT methods */
void   cdb__compose_ptp_port_c_t__init
                     (Cdb__ComposePtpPortCT         *message);
size_t cdb__compose_ptp_port_c_t__get_packed_size
                     (const Cdb__ComposePtpPortCT   *message);
size_t cdb__compose_ptp_port_c_t__pack
                     (const Cdb__ComposePtpPortCT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_port_c_t__pack_to_buffer
                     (const Cdb__ComposePtpPortCT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpPortCT *
       cdb__compose_ptp_port_c_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_port_c_t__free_unpacked
                     (Cdb__ComposePtpPortCT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpPortStatsT methods */
void   cdb__compose_ptp_port_stats_t__init
                     (Cdb__ComposePtpPortStatsT         *message);
size_t cdb__compose_ptp_port_stats_t__get_packed_size
                     (const Cdb__ComposePtpPortStatsT   *message);
size_t cdb__compose_ptp_port_stats_t__pack
                     (const Cdb__ComposePtpPortStatsT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_port_stats_t__pack_to_buffer
                     (const Cdb__ComposePtpPortStatsT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpPortStatsT *
       cdb__compose_ptp_port_stats_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_port_stats_t__free_unpacked
                     (Cdb__ComposePtpPortStatsT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpMsgProcOpsT methods */
void   cdb__compose_ptp_msg_proc_ops_t__init
                     (Cdb__ComposePtpMsgProcOpsT         *message);
size_t cdb__compose_ptp_msg_proc_ops_t__get_packed_size
                     (const Cdb__ComposePtpMsgProcOpsT   *message);
size_t cdb__compose_ptp_msg_proc_ops_t__pack
                     (const Cdb__ComposePtpMsgProcOpsT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_msg_proc_ops_t__pack_to_buffer
                     (const Cdb__ComposePtpMsgProcOpsT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpMsgProcOpsT *
       cdb__compose_ptp_msg_proc_ops_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_msg_proc_ops_t__free_unpacked
                     (Cdb__ComposePtpMsgProcOpsT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeKernelIfIpv6AddrT methods */
void   cdb__compose_kernel_if_ipv6_addr_t__init
                     (Cdb__ComposeKernelIfIpv6AddrT         *message);
size_t cdb__compose_kernel_if_ipv6_addr_t__get_packed_size
                     (const Cdb__ComposeKernelIfIpv6AddrT   *message);
size_t cdb__compose_kernel_if_ipv6_addr_t__pack
                     (const Cdb__ComposeKernelIfIpv6AddrT   *message,
                      uint8_t             *out);
size_t cdb__compose_kernel_if_ipv6_addr_t__pack_to_buffer
                     (const Cdb__ComposeKernelIfIpv6AddrT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeKernelIfIpv6AddrT *
       cdb__compose_kernel_if_ipv6_addr_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_kernel_if_ipv6_addr_t__free_unpacked
                     (Cdb__ComposeKernelIfIpv6AddrT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTpoamDmT methods */
void   cdb__compose_tpoam_dm_t__init
                     (Cdb__ComposeTpoamDmT         *message);
size_t cdb__compose_tpoam_dm_t__get_packed_size
                     (const Cdb__ComposeTpoamDmT   *message);
size_t cdb__compose_tpoam_dm_t__pack
                     (const Cdb__ComposeTpoamDmT   *message,
                      uint8_t             *out);
size_t cdb__compose_tpoam_dm_t__pack_to_buffer
                     (const Cdb__ComposeTpoamDmT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTpoamDmT *
       cdb__compose_tpoam_dm_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tpoam_dm_t__free_unpacked
                     (Cdb__ComposeTpoamDmT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTpoamLmT methods */
void   cdb__compose_tpoam_lm_t__init
                     (Cdb__ComposeTpoamLmT         *message);
size_t cdb__compose_tpoam_lm_t__get_packed_size
                     (const Cdb__ComposeTpoamLmT   *message);
size_t cdb__compose_tpoam_lm_t__pack
                     (const Cdb__ComposeTpoamLmT   *message,
                      uint8_t             *out);
size_t cdb__compose_tpoam_lm_t__pack_to_buffer
                     (const Cdb__ComposeTpoamLmT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTpoamLmT *
       cdb__compose_tpoam_lm_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tpoam_lm_t__free_unpacked
                     (Cdb__ComposeTpoamLmT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTpoamLbT methods */
void   cdb__compose_tpoam_lb_t__init
                     (Cdb__ComposeTpoamLbT         *message);
size_t cdb__compose_tpoam_lb_t__get_packed_size
                     (const Cdb__ComposeTpoamLbT   *message);
size_t cdb__compose_tpoam_lb_t__pack
                     (const Cdb__ComposeTpoamLbT   *message,
                      uint8_t             *out);
size_t cdb__compose_tpoam_lb_t__pack_to_buffer
                     (const Cdb__ComposeTpoamLbT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTpoamLbT *
       cdb__compose_tpoam_lb_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tpoam_lb_t__free_unpacked
                     (Cdb__ComposeTpoamLbT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTpoamEventT methods */
void   cdb__compose_tpoam_event_t__init
                     (Cdb__ComposeTpoamEventT         *message);
size_t cdb__compose_tpoam_event_t__get_packed_size
                     (const Cdb__ComposeTpoamEventT   *message);
size_t cdb__compose_tpoam_event_t__pack
                     (const Cdb__ComposeTpoamEventT   *message,
                      uint8_t             *out);
size_t cdb__compose_tpoam_event_t__pack_to_buffer
                     (const Cdb__ComposeTpoamEventT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTpoamEventT *
       cdb__compose_tpoam_event_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tpoam_event_t__free_unpacked
                     (Cdb__ComposeTpoamEventT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTpoamStatsT methods */
void   cdb__compose_tpoam_stats_t__init
                     (Cdb__ComposeTpoamStatsT         *message);
size_t cdb__compose_tpoam_stats_t__get_packed_size
                     (const Cdb__ComposeTpoamStatsT   *message);
size_t cdb__compose_tpoam_stats_t__pack
                     (const Cdb__ComposeTpoamStatsT   *message,
                      uint8_t             *out);
size_t cdb__compose_tpoam_stats_t__pack_to_buffer
                     (const Cdb__ComposeTpoamStatsT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTpoamStatsT *
       cdb__compose_tpoam_stats_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tpoam_stats_t__free_unpacked
                     (Cdb__ComposeTpoamStatsT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTpoamListT methods */
void   cdb__compose_tpoam_list_t__init
                     (Cdb__ComposeTpoamListT         *message);
size_t cdb__compose_tpoam_list_t__get_packed_size
                     (const Cdb__ComposeTpoamListT   *message);
size_t cdb__compose_tpoam_list_t__pack
                     (const Cdb__ComposeTpoamListT   *message,
                      uint8_t             *out);
size_t cdb__compose_tpoam_list_t__pack_to_buffer
                     (const Cdb__ComposeTpoamListT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTpoamListT *
       cdb__compose_tpoam_list_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tpoam_list_t__free_unpacked
                     (Cdb__ComposeTpoamListT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTpoamRcCountT methods */
void   cdb__compose_tpoam_rc_count_t__init
                     (Cdb__ComposeTpoamRcCountT         *message);
size_t cdb__compose_tpoam_rc_count_t__get_packed_size
                     (const Cdb__ComposeTpoamRcCountT   *message);
size_t cdb__compose_tpoam_rc_count_t__pack
                     (const Cdb__ComposeTpoamRcCountT   *message,
                      uint8_t             *out);
size_t cdb__compose_tpoam_rc_count_t__pack_to_buffer
                     (const Cdb__ComposeTpoamRcCountT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTpoamRcCountT *
       cdb__compose_tpoam_rc_count_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tpoam_rc_count_t__free_unpacked
                     (Cdb__ComposeTpoamRcCountT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTpoamExecT methods */
void   cdb__compose_tpoam_exec_t__init
                     (Cdb__ComposeTpoamExecT         *message);
size_t cdb__compose_tpoam_exec_t__get_packed_size
                     (const Cdb__ComposeTpoamExecT   *message);
size_t cdb__compose_tpoam_exec_t__pack
                     (const Cdb__ComposeTpoamExecT   *message,
                      uint8_t             *out);
size_t cdb__compose_tpoam_exec_t__pack_to_buffer
                     (const Cdb__ComposeTpoamExecT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTpoamExecT *
       cdb__compose_tpoam_exec_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tpoam_exec_t__free_unpacked
                     (Cdb__ComposeTpoamExecT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTpoamTrapCacheT methods */
void   cdb__compose_tpoam_trap_cache_t__init
                     (Cdb__ComposeTpoamTrapCacheT         *message);
size_t cdb__compose_tpoam_trap_cache_t__get_packed_size
                     (const Cdb__ComposeTpoamTrapCacheT   *message);
size_t cdb__compose_tpoam_trap_cache_t__pack
                     (const Cdb__ComposeTpoamTrapCacheT   *message,
                      uint8_t             *out);
size_t cdb__compose_tpoam_trap_cache_t__pack_to_buffer
                     (const Cdb__ComposeTpoamTrapCacheT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTpoamTrapCacheT *
       cdb__compose_tpoam_trap_cache_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tpoam_trap_cache_t__free_unpacked
                     (Cdb__ComposeTpoamTrapCacheT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTpoamRatelimitT methods */
void   cdb__compose_tpoam_ratelimit_t__init
                     (Cdb__ComposeTpoamRatelimitT         *message);
size_t cdb__compose_tpoam_ratelimit_t__get_packed_size
                     (const Cdb__ComposeTpoamRatelimitT   *message);
size_t cdb__compose_tpoam_ratelimit_t__pack
                     (const Cdb__ComposeTpoamRatelimitT   *message,
                      uint8_t             *out);
size_t cdb__compose_tpoam_ratelimit_t__pack_to_buffer
                     (const Cdb__ComposeTpoamRatelimitT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTpoamRatelimitT *
       cdb__compose_tpoam_ratelimit_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tpoam_ratelimit_t__free_unpacked
                     (Cdb__ComposeTpoamRatelimitT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTpoamLmmExecT methods */
void   cdb__compose_tpoam_lmm_exec_t__init
                     (Cdb__ComposeTpoamLmmExecT         *message);
size_t cdb__compose_tpoam_lmm_exec_t__get_packed_size
                     (const Cdb__ComposeTpoamLmmExecT   *message);
size_t cdb__compose_tpoam_lmm_exec_t__pack
                     (const Cdb__ComposeTpoamLmmExecT   *message,
                      uint8_t             *out);
size_t cdb__compose_tpoam_lmm_exec_t__pack_to_buffer
                     (const Cdb__ComposeTpoamLmmExecT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTpoamLmmExecT *
       cdb__compose_tpoam_lmm_exec_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tpoam_lmm_exec_t__free_unpacked
                     (Cdb__ComposeTpoamLmmExecT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTpoamLbExecT methods */
void   cdb__compose_tpoam_lb_exec_t__init
                     (Cdb__ComposeTpoamLbExecT         *message);
size_t cdb__compose_tpoam_lb_exec_t__get_packed_size
                     (const Cdb__ComposeTpoamLbExecT   *message);
size_t cdb__compose_tpoam_lb_exec_t__pack
                     (const Cdb__ComposeTpoamLbExecT   *message,
                      uint8_t             *out);
size_t cdb__compose_tpoam_lb_exec_t__pack_to_buffer
                     (const Cdb__ComposeTpoamLbExecT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTpoamLbExecT *
       cdb__compose_tpoam_lb_exec_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tpoam_lb_exec_t__free_unpacked
                     (Cdb__ComposeTpoamLbExecT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTpoam1dmDmmExecT methods */
void   cdb__compose_tpoam_1dm_dmm_exec_t__init
                     (Cdb__ComposeTpoam1dmDmmExecT         *message);
size_t cdb__compose_tpoam_1dm_dmm_exec_t__get_packed_size
                     (const Cdb__ComposeTpoam1dmDmmExecT   *message);
size_t cdb__compose_tpoam_1dm_dmm_exec_t__pack
                     (const Cdb__ComposeTpoam1dmDmmExecT   *message,
                      uint8_t             *out);
size_t cdb__compose_tpoam_1dm_dmm_exec_t__pack_to_buffer
                     (const Cdb__ComposeTpoam1dmDmmExecT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTpoam1dmDmmExecT *
       cdb__compose_tpoam_1dm_dmm_exec_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tpoam_1dm_dmm_exec_t__free_unpacked
                     (Cdb__ComposeTpoam1dmDmmExecT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeUploadTpoamDmT methods */
void   cdb__compose_upload_tpoam_dm_t__init
                     (Cdb__ComposeUploadTpoamDmT         *message);
size_t cdb__compose_upload_tpoam_dm_t__get_packed_size
                     (const Cdb__ComposeUploadTpoamDmT   *message);
size_t cdb__compose_upload_tpoam_dm_t__pack
                     (const Cdb__ComposeUploadTpoamDmT   *message,
                      uint8_t             *out);
size_t cdb__compose_upload_tpoam_dm_t__pack_to_buffer
                     (const Cdb__ComposeUploadTpoamDmT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeUploadTpoamDmT *
       cdb__compose_upload_tpoam_dm_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_upload_tpoam_dm_t__free_unpacked
                     (Cdb__ComposeUploadTpoamDmT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeUploadTpoamLmT methods */
void   cdb__compose_upload_tpoam_lm_t__init
                     (Cdb__ComposeUploadTpoamLmT         *message);
size_t cdb__compose_upload_tpoam_lm_t__get_packed_size
                     (const Cdb__ComposeUploadTpoamLmT   *message);
size_t cdb__compose_upload_tpoam_lm_t__pack
                     (const Cdb__ComposeUploadTpoamLmT   *message,
                      uint8_t             *out);
size_t cdb__compose_upload_tpoam_lm_t__pack_to_buffer
                     (const Cdb__ComposeUploadTpoamLmT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeUploadTpoamLmT *
       cdb__compose_upload_tpoam_lm_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_upload_tpoam_lm_t__free_unpacked
                     (Cdb__ComposeUploadTpoamLmT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeUploadTpoamCcmT methods */
void   cdb__compose_upload_tpoam_ccm_t__init
                     (Cdb__ComposeUploadTpoamCcmT         *message);
size_t cdb__compose_upload_tpoam_ccm_t__get_packed_size
                     (const Cdb__ComposeUploadTpoamCcmT   *message);
size_t cdb__compose_upload_tpoam_ccm_t__pack
                     (const Cdb__ComposeUploadTpoamCcmT   *message,
                      uint8_t             *out);
size_t cdb__compose_upload_tpoam_ccm_t__pack_to_buffer
                     (const Cdb__ComposeUploadTpoamCcmT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeUploadTpoamCcmT *
       cdb__compose_upload_tpoam_ccm_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_upload_tpoam_ccm_t__free_unpacked
                     (Cdb__ComposeUploadTpoamCcmT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeGlbBoardTypeT methods */
void   cdb__compose_glb_board_type_t__init
                     (Cdb__ComposeGlbBoardTypeT         *message);
size_t cdb__compose_glb_board_type_t__get_packed_size
                     (const Cdb__ComposeGlbBoardTypeT   *message);
size_t cdb__compose_glb_board_type_t__pack
                     (const Cdb__ComposeGlbBoardTypeT   *message,
                      uint8_t             *out);
size_t cdb__compose_glb_board_type_t__pack_to_buffer
                     (const Cdb__ComposeGlbBoardTypeT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeGlbBoardTypeT *
       cdb__compose_glb_board_type_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_glb_board_type_t__free_unpacked
                     (Cdb__ComposeGlbBoardTypeT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeGlbStatsT methods */
void   cdb__compose_glb_stats_t__init
                     (Cdb__ComposeGlbStatsT         *message);
size_t cdb__compose_glb_stats_t__get_packed_size
                     (const Cdb__ComposeGlbStatsT   *message);
size_t cdb__compose_glb_stats_t__pack
                     (const Cdb__ComposeGlbStatsT   *message,
                      uint8_t             *out);
size_t cdb__compose_glb_stats_t__pack_to_buffer
                     (const Cdb__ComposeGlbStatsT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeGlbStatsT *
       cdb__compose_glb_stats_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_glb_stats_t__free_unpacked
                     (Cdb__ComposeGlbStatsT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeMstiPortKeyT methods */
void   cdb__compose_msti_port_key_t__init
                     (Cdb__ComposeMstiPortKeyT         *message);
size_t cdb__compose_msti_port_key_t__get_packed_size
                     (const Cdb__ComposeMstiPortKeyT   *message);
size_t cdb__compose_msti_port_key_t__pack
                     (const Cdb__ComposeMstiPortKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_msti_port_key_t__pack_to_buffer
                     (const Cdb__ComposeMstiPortKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeMstiPortKeyT *
       cdb__compose_msti_port_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_msti_port_key_t__free_unpacked
                     (Cdb__ComposeMstiPortKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeBindingKeyT methods */
void   cdb__compose_binding_key_t__init
                     (Cdb__ComposeBindingKeyT         *message);
size_t cdb__compose_binding_key_t__get_packed_size
                     (const Cdb__ComposeBindingKeyT   *message);
size_t cdb__compose_binding_key_t__pack
                     (const Cdb__ComposeBindingKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_binding_key_t__pack_to_buffer
                     (const Cdb__ComposeBindingKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeBindingKeyT *
       cdb__compose_binding_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_binding_key_t__free_unpacked
                     (Cdb__ComposeBindingKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeNsPortForwardingKeyT methods */
void   cdb__compose_ns_port_forwarding_key_t__init
                     (Cdb__ComposeNsPortForwardingKeyT         *message);
size_t cdb__compose_ns_port_forwarding_key_t__get_packed_size
                     (const Cdb__ComposeNsPortForwardingKeyT   *message);
size_t cdb__compose_ns_port_forwarding_key_t__pack
                     (const Cdb__ComposeNsPortForwardingKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_ns_port_forwarding_key_t__pack_to_buffer
                     (const Cdb__ComposeNsPortForwardingKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeNsPortForwardingKeyT *
       cdb__compose_ns_port_forwarding_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ns_port_forwarding_key_t__free_unpacked
                     (Cdb__ComposeNsPortForwardingKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeRouteNodeKeyT methods */
void   cdb__compose_route_node_key_t__init
                     (Cdb__ComposeRouteNodeKeyT         *message);
size_t cdb__compose_route_node_key_t__get_packed_size
                     (const Cdb__ComposeRouteNodeKeyT   *message);
size_t cdb__compose_route_node_key_t__pack
                     (const Cdb__ComposeRouteNodeKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_route_node_key_t__pack_to_buffer
                     (const Cdb__ComposeRouteNodeKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeRouteNodeKeyT *
       cdb__compose_route_node_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_route_node_key_t__free_unpacked
                     (Cdb__ComposeRouteNodeKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeRouteNodeKeyWithAdT methods */
void   cdb__compose_route_node_key_with_ad_t__init
                     (Cdb__ComposeRouteNodeKeyWithAdT         *message);
size_t cdb__compose_route_node_key_with_ad_t__get_packed_size
                     (const Cdb__ComposeRouteNodeKeyWithAdT   *message);
size_t cdb__compose_route_node_key_with_ad_t__pack
                     (const Cdb__ComposeRouteNodeKeyWithAdT   *message,
                      uint8_t             *out);
size_t cdb__compose_route_node_key_with_ad_t__pack_to_buffer
                     (const Cdb__ComposeRouteNodeKeyWithAdT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeRouteNodeKeyWithAdT *
       cdb__compose_route_node_key_with_ad_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_route_node_key_with_ad_t__free_unpacked
                     (Cdb__ComposeRouteNodeKeyWithAdT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeSummerTimeT methods */
void   cdb__compose_summer_time_t__init
                     (Cdb__ComposeSummerTimeT         *message);
size_t cdb__compose_summer_time_t__get_packed_size
                     (const Cdb__ComposeSummerTimeT   *message);
size_t cdb__compose_summer_time_t__pack
                     (const Cdb__ComposeSummerTimeT   *message,
                      uint8_t             *out);
size_t cdb__compose_summer_time_t__pack_to_buffer
                     (const Cdb__ComposeSummerTimeT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeSummerTimeT *
       cdb__compose_summer_time_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_summer_time_t__free_unpacked
                     (Cdb__ComposeSummerTimeT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeWhichSummerTimeT methods */
void   cdb__compose_which_summer_time_t__init
                     (Cdb__ComposeWhichSummerTimeT         *message);
size_t cdb__compose_which_summer_time_t__get_packed_size
                     (const Cdb__ComposeWhichSummerTimeT   *message);
size_t cdb__compose_which_summer_time_t__pack
                     (const Cdb__ComposeWhichSummerTimeT   *message,
                      uint8_t             *out);
size_t cdb__compose_which_summer_time_t__pack_to_buffer
                     (const Cdb__ComposeWhichSummerTimeT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeWhichSummerTimeT *
       cdb__compose_which_summer_time_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_which_summer_time_t__free_unpacked
                     (Cdb__ComposeWhichSummerTimeT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeOspfAreaRangeKeyT methods */
void   cdb__compose_ospf_area_range_key_t__init
                     (Cdb__ComposeOspfAreaRangeKeyT         *message);
size_t cdb__compose_ospf_area_range_key_t__get_packed_size
                     (const Cdb__ComposeOspfAreaRangeKeyT   *message);
size_t cdb__compose_ospf_area_range_key_t__pack
                     (const Cdb__ComposeOspfAreaRangeKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_ospf_area_range_key_t__pack_to_buffer
                     (const Cdb__ComposeOspfAreaRangeKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeOspfAreaRangeKeyT *
       cdb__compose_ospf_area_range_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ospf_area_range_key_t__free_unpacked
                     (Cdb__ComposeOspfAreaRangeKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeOspf6AreaRangeKeyT methods */
void   cdb__compose_ospf6_area_range_key_t__init
                     (Cdb__ComposeOspf6AreaRangeKeyT         *message);
size_t cdb__compose_ospf6_area_range_key_t__get_packed_size
                     (const Cdb__ComposeOspf6AreaRangeKeyT   *message);
size_t cdb__compose_ospf6_area_range_key_t__pack
                     (const Cdb__ComposeOspf6AreaRangeKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_ospf6_area_range_key_t__pack_to_buffer
                     (const Cdb__ComposeOspf6AreaRangeKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeOspf6AreaRangeKeyT *
       cdb__compose_ospf6_area_range_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ospf6_area_range_key_t__free_unpacked
                     (Cdb__ComposeOspf6AreaRangeKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeOspfAreaVlinkKeyT methods */
void   cdb__compose_ospf_area_vlink_key_t__init
                     (Cdb__ComposeOspfAreaVlinkKeyT         *message);
size_t cdb__compose_ospf_area_vlink_key_t__get_packed_size
                     (const Cdb__ComposeOspfAreaVlinkKeyT   *message);
size_t cdb__compose_ospf_area_vlink_key_t__pack
                     (const Cdb__ComposeOspfAreaVlinkKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_ospf_area_vlink_key_t__pack_to_buffer
                     (const Cdb__ComposeOspfAreaVlinkKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeOspfAreaVlinkKeyT *
       cdb__compose_ospf_area_vlink_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ospf_area_vlink_key_t__free_unpacked
                     (Cdb__ComposeOspfAreaVlinkKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeRipTimersT methods */
void   cdb__compose_rip_timers_t__init
                     (Cdb__ComposeRipTimersT         *message);
size_t cdb__compose_rip_timers_t__get_packed_size
                     (const Cdb__ComposeRipTimersT   *message);
size_t cdb__compose_rip_timers_t__pack
                     (const Cdb__ComposeRipTimersT   *message,
                      uint8_t             *out);
size_t cdb__compose_rip_timers_t__pack_to_buffer
                     (const Cdb__ComposeRipTimersT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeRipTimersT *
       cdb__compose_rip_timers_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_rip_timers_t__free_unpacked
                     (Cdb__ComposeRipTimersT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeNexthopKeyT methods */
void   cdb__compose_nexthop_key_t__init
                     (Cdb__ComposeNexthopKeyT         *message);
size_t cdb__compose_nexthop_key_t__get_packed_size
                     (const Cdb__ComposeNexthopKeyT   *message);
size_t cdb__compose_nexthop_key_t__pack
                     (const Cdb__ComposeNexthopKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_nexthop_key_t__pack_to_buffer
                     (const Cdb__ComposeNexthopKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeNexthopKeyT *
       cdb__compose_nexthop_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_nexthop_key_t__free_unpacked
                     (Cdb__ComposeNexthopKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeAddrIpv4T methods */
void   cdb__compose_addr_ipv4_t__init
                     (Cdb__ComposeAddrIpv4T         *message);
size_t cdb__compose_addr_ipv4_t__get_packed_size
                     (const Cdb__ComposeAddrIpv4T   *message);
size_t cdb__compose_addr_ipv4_t__pack
                     (const Cdb__ComposeAddrIpv4T   *message,
                      uint8_t             *out);
size_t cdb__compose_addr_ipv4_t__pack_to_buffer
                     (const Cdb__ComposeAddrIpv4T   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeAddrIpv4T *
       cdb__compose_addr_ipv4_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_addr_ipv4_t__free_unpacked
                     (Cdb__ComposeAddrIpv4T *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeAddrIpv6T methods */
void   cdb__compose_addr_ipv6_t__init
                     (Cdb__ComposeAddrIpv6T         *message);
size_t cdb__compose_addr_ipv6_t__get_packed_size
                     (const Cdb__ComposeAddrIpv6T   *message);
size_t cdb__compose_addr_ipv6_t__pack
                     (const Cdb__ComposeAddrIpv6T   *message,
                      uint8_t             *out);
size_t cdb__compose_addr_ipv6_t__pack_to_buffer
                     (const Cdb__ComposeAddrIpv6T   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeAddrIpv6T *
       cdb__compose_addr_ipv6_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_addr_ipv6_t__free_unpacked
                     (Cdb__ComposeAddrIpv6T *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePrefixIpv4T methods */
void   cdb__compose_prefix_ipv4_t__init
                     (Cdb__ComposePrefixIpv4T         *message);
size_t cdb__compose_prefix_ipv4_t__get_packed_size
                     (const Cdb__ComposePrefixIpv4T   *message);
size_t cdb__compose_prefix_ipv4_t__pack
                     (const Cdb__ComposePrefixIpv4T   *message,
                      uint8_t             *out);
size_t cdb__compose_prefix_ipv4_t__pack_to_buffer
                     (const Cdb__ComposePrefixIpv4T   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePrefixIpv4T *
       cdb__compose_prefix_ipv4_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_prefix_ipv4_t__free_unpacked
                     (Cdb__ComposePrefixIpv4T *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePrefixT methods */
void   cdb__compose_prefix_t__init
                     (Cdb__ComposePrefixT         *message);
size_t cdb__compose_prefix_t__get_packed_size
                     (const Cdb__ComposePrefixT   *message);
size_t cdb__compose_prefix_t__pack
                     (const Cdb__ComposePrefixT   *message,
                      uint8_t             *out);
size_t cdb__compose_prefix_t__pack_to_buffer
                     (const Cdb__ComposePrefixT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePrefixT *
       cdb__compose_prefix_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_prefix_t__free_unpacked
                     (Cdb__ComposePrefixT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeMstpBrgIdT methods */
void   cdb__compose_mstp_brg_id_t__init
                     (Cdb__ComposeMstpBrgIdT         *message);
size_t cdb__compose_mstp_brg_id_t__get_packed_size
                     (const Cdb__ComposeMstpBrgIdT   *message);
size_t cdb__compose_mstp_brg_id_t__pack
                     (const Cdb__ComposeMstpBrgIdT   *message,
                      uint8_t             *out);
size_t cdb__compose_mstp_brg_id_t__pack_to_buffer
                     (const Cdb__ComposeMstpBrgIdT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeMstpBrgIdT *
       cdb__compose_mstp_brg_id_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_mstp_brg_id_t__free_unpacked
                     (Cdb__ComposeMstpBrgIdT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeSalTimeT methods */
void   cdb__compose_sal_time_t__init
                     (Cdb__ComposeSalTimeT         *message);
size_t cdb__compose_sal_time_t__get_packed_size
                     (const Cdb__ComposeSalTimeT   *message);
size_t cdb__compose_sal_time_t__pack
                     (const Cdb__ComposeSalTimeT   *message,
                      uint8_t             *out);
size_t cdb__compose_sal_time_t__pack_to_buffer
                     (const Cdb__ComposeSalTimeT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeSalTimeT *
       cdb__compose_sal_time_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_sal_time_t__free_unpacked
                     (Cdb__ComposeSalTimeT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTimeRangeValueT methods */
void   cdb__compose_time_range_value_t__init
                     (Cdb__ComposeTimeRangeValueT         *message);
size_t cdb__compose_time_range_value_t__get_packed_size
                     (const Cdb__ComposeTimeRangeValueT   *message);
size_t cdb__compose_time_range_value_t__pack
                     (const Cdb__ComposeTimeRangeValueT   *message,
                      uint8_t             *out);
size_t cdb__compose_time_range_value_t__pack_to_buffer
                     (const Cdb__ComposeTimeRangeValueT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTimeRangeValueT *
       cdb__compose_time_range_value_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_time_range_value_t__free_unpacked
                     (Cdb__ComposeTimeRangeValueT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTimeRangeTimerT methods */
void   cdb__compose_time_range_timer_t__init
                     (Cdb__ComposeTimeRangeTimerT         *message);
size_t cdb__compose_time_range_timer_t__get_packed_size
                     (const Cdb__ComposeTimeRangeTimerT   *message);
size_t cdb__compose_time_range_timer_t__pack
                     (const Cdb__ComposeTimeRangeTimerT   *message,
                      uint8_t             *out);
size_t cdb__compose_time_range_timer_t__pack_to_buffer
                     (const Cdb__ComposeTimeRangeTimerT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTimeRangeTimerT *
       cdb__compose_time_range_timer_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_time_range_timer_t__free_unpacked
                     (Cdb__ComposeTimeRangeTimerT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeSnmpTrapKeyT methods */
void   cdb__compose_snmp_trap_key_t__init
                     (Cdb__ComposeSnmpTrapKeyT         *message);
size_t cdb__compose_snmp_trap_key_t__get_packed_size
                     (const Cdb__ComposeSnmpTrapKeyT   *message);
size_t cdb__compose_snmp_trap_key_t__pack
                     (const Cdb__ComposeSnmpTrapKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_snmp_trap_key_t__pack_to_buffer
                     (const Cdb__ComposeSnmpTrapKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeSnmpTrapKeyT *
       cdb__compose_snmp_trap_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_snmp_trap_key_t__free_unpacked
                     (Cdb__ComposeSnmpTrapKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeSnmpViewKeyT methods */
void   cdb__compose_snmp_view_key_t__init
                     (Cdb__ComposeSnmpViewKeyT         *message);
size_t cdb__compose_snmp_view_key_t__get_packed_size
                     (const Cdb__ComposeSnmpViewKeyT   *message);
size_t cdb__compose_snmp_view_key_t__pack
                     (const Cdb__ComposeSnmpViewKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_snmp_view_key_t__pack_to_buffer
                     (const Cdb__ComposeSnmpViewKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeSnmpViewKeyT *
       cdb__compose_snmp_view_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_snmp_view_key_t__free_unpacked
                     (Cdb__ComposeSnmpViewKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeSnmpGroupUsmKeyT methods */
void   cdb__compose_snmp_group_usm_key_t__init
                     (Cdb__ComposeSnmpGroupUsmKeyT         *message);
size_t cdb__compose_snmp_group_usm_key_t__get_packed_size
                     (const Cdb__ComposeSnmpGroupUsmKeyT   *message);
size_t cdb__compose_snmp_group_usm_key_t__pack
                     (const Cdb__ComposeSnmpGroupUsmKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_snmp_group_usm_key_t__pack_to_buffer
                     (const Cdb__ComposeSnmpGroupUsmKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeSnmpGroupUsmKeyT *
       cdb__compose_snmp_group_usm_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_snmp_group_usm_key_t__free_unpacked
                     (Cdb__ComposeSnmpGroupUsmKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeSnmpInformKeyT methods */
void   cdb__compose_snmp_inform_key_t__init
                     (Cdb__ComposeSnmpInformKeyT         *message);
size_t cdb__compose_snmp_inform_key_t__get_packed_size
                     (const Cdb__ComposeSnmpInformKeyT   *message);
size_t cdb__compose_snmp_inform_key_t__pack
                     (const Cdb__ComposeSnmpInformKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_snmp_inform_key_t__pack_to_buffer
                     (const Cdb__ComposeSnmpInformKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeSnmpInformKeyT *
       cdb__compose_snmp_inform_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_snmp_inform_key_t__free_unpacked
                     (Cdb__ComposeSnmpInformKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeAddrT methods */
void   cdb__compose_addr_t__init
                     (Cdb__ComposeAddrT         *message);
size_t cdb__compose_addr_t__get_packed_size
                     (const Cdb__ComposeAddrT   *message);
size_t cdb__compose_addr_t__pack
                     (const Cdb__ComposeAddrT   *message,
                      uint8_t             *out);
size_t cdb__compose_addr_t__pack_to_buffer
                     (const Cdb__ComposeAddrT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeAddrT *
       cdb__compose_addr_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_addr_t__free_unpacked
                     (Cdb__ComposeAddrT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeSnmpInfoT methods */
void   cdb__compose_snmp_info_t__init
                     (Cdb__ComposeSnmpInfoT         *message);
size_t cdb__compose_snmp_info_t__get_packed_size
                     (const Cdb__ComposeSnmpInfoT   *message);
size_t cdb__compose_snmp_info_t__pack
                     (const Cdb__ComposeSnmpInfoT   *message,
                      uint8_t             *out);
size_t cdb__compose_snmp_info_t__pack_to_buffer
                     (const Cdb__ComposeSnmpInfoT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeSnmpInfoT *
       cdb__compose_snmp_info_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_snmp_info_t__free_unpacked
                     (Cdb__ComposeSnmpInfoT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeUserT methods */
void   cdb__compose_user_t__init
                     (Cdb__ComposeUserT         *message);
size_t cdb__compose_user_t__get_packed_size
                     (const Cdb__ComposeUserT   *message);
size_t cdb__compose_user_t__pack
                     (const Cdb__ComposeUserT   *message,
                      uint8_t             *out);
size_t cdb__compose_user_t__pack_to_buffer
                     (const Cdb__ComposeUserT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeUserT *
       cdb__compose_user_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_user_t__free_unpacked
                     (Cdb__ComposeUserT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeRsaKeystrT methods */
void   cdb__compose_rsa_keystr_t__init
                     (Cdb__ComposeRsaKeystrT         *message);
size_t cdb__compose_rsa_keystr_t__get_packed_size
                     (const Cdb__ComposeRsaKeystrT   *message);
size_t cdb__compose_rsa_keystr_t__pack
                     (const Cdb__ComposeRsaKeystrT   *message,
                      uint8_t             *out);
size_t cdb__compose_rsa_keystr_t__pack_to_buffer
                     (const Cdb__ComposeRsaKeystrT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeRsaKeystrT *
       cdb__compose_rsa_keystr_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_rsa_keystr_t__free_unpacked
                     (Cdb__ComposeRsaKeystrT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTimestampT methods */
void   cdb__compose_timestamp_t__init
                     (Cdb__ComposeTimestampT         *message);
size_t cdb__compose_timestamp_t__get_packed_size
                     (const Cdb__ComposeTimestampT   *message);
size_t cdb__compose_timestamp_t__pack
                     (const Cdb__ComposeTimestampT   *message,
                      uint8_t             *out);
size_t cdb__compose_timestamp_t__pack_to_buffer
                     (const Cdb__ComposeTimestampT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTimestampT *
       cdb__compose_timestamp_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_timestamp_t__free_unpacked
                     (Cdb__ComposeTimestampT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeMailT methods */
void   cdb__compose_mail_t__init
                     (Cdb__ComposeMailT         *message);
size_t cdb__compose_mail_t__get_packed_size
                     (const Cdb__ComposeMailT   *message);
size_t cdb__compose_mail_t__pack
                     (const Cdb__ComposeMailT   *message,
                      uint8_t             *out);
size_t cdb__compose_mail_t__pack_to_buffer
                     (const Cdb__ComposeMailT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeMailT *
       cdb__compose_mail_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_mail_t__free_unpacked
                     (Cdb__ComposeMailT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeGlbFlowL4PortT methods */
void   cdb__compose_glb_flow_l4_port_t__init
                     (Cdb__ComposeGlbFlowL4PortT         *message);
size_t cdb__compose_glb_flow_l4_port_t__get_packed_size
                     (const Cdb__ComposeGlbFlowL4PortT   *message);
size_t cdb__compose_glb_flow_l4_port_t__pack
                     (const Cdb__ComposeGlbFlowL4PortT   *message,
                      uint8_t             *out);
size_t cdb__compose_glb_flow_l4_port_t__pack_to_buffer
                     (const Cdb__ComposeGlbFlowL4PortT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeGlbFlowL4PortT *
       cdb__compose_glb_flow_l4_port_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_glb_flow_l4_port_t__free_unpacked
                     (Cdb__ComposeGlbFlowL4PortT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeGlbFlowTcpFlagT methods */
void   cdb__compose_glb_flow_tcp_flag_t__init
                     (Cdb__ComposeGlbFlowTcpFlagT         *message);
size_t cdb__compose_glb_flow_tcp_flag_t__get_packed_size
                     (const Cdb__ComposeGlbFlowTcpFlagT   *message);
size_t cdb__compose_glb_flow_tcp_flag_t__pack
                     (const Cdb__ComposeGlbFlowTcpFlagT   *message,
                      uint8_t             *out);
size_t cdb__compose_glb_flow_tcp_flag_t__pack_to_buffer
                     (const Cdb__ComposeGlbFlowTcpFlagT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeGlbFlowTcpFlagT *
       cdb__compose_glb_flow_tcp_flag_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_glb_flow_tcp_flag_t__free_unpacked
                     (Cdb__ComposeGlbFlowTcpFlagT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeNexthopEcmpT methods */
void   cdb__compose_nexthop_ecmp_t__init
                     (Cdb__ComposeNexthopEcmpT         *message);
size_t cdb__compose_nexthop_ecmp_t__get_packed_size
                     (const Cdb__ComposeNexthopEcmpT   *message);
size_t cdb__compose_nexthop_ecmp_t__pack
                     (const Cdb__ComposeNexthopEcmpT   *message,
                      uint8_t             *out);
size_t cdb__compose_nexthop_ecmp_t__pack_to_buffer
                     (const Cdb__ComposeNexthopEcmpT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeNexthopEcmpT *
       cdb__compose_nexthop_ecmp_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_nexthop_ecmp_t__free_unpacked
                     (Cdb__ComposeNexthopEcmpT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeNexthopEcmpRoutedT methods */
void   cdb__compose_nexthop_ecmp_routed_t__init
                     (Cdb__ComposeNexthopEcmpRoutedT         *message);
size_t cdb__compose_nexthop_ecmp_routed_t__get_packed_size
                     (const Cdb__ComposeNexthopEcmpRoutedT   *message);
size_t cdb__compose_nexthop_ecmp_routed_t__pack
                     (const Cdb__ComposeNexthopEcmpRoutedT   *message,
                      uint8_t             *out);
size_t cdb__compose_nexthop_ecmp_routed_t__pack_to_buffer
                     (const Cdb__ComposeNexthopEcmpRoutedT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeNexthopEcmpRoutedT *
       cdb__compose_nexthop_ecmp_routed_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_nexthop_ecmp_routed_t__free_unpacked
                     (Cdb__ComposeNexthopEcmpRoutedT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeAceConfigKeyT methods */
void   cdb__compose_ace_config_key_t__init
                     (Cdb__ComposeAceConfigKeyT         *message);
size_t cdb__compose_ace_config_key_t__get_packed_size
                     (const Cdb__ComposeAceConfigKeyT   *message);
size_t cdb__compose_ace_config_key_t__pack
                     (const Cdb__ComposeAceConfigKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_ace_config_key_t__pack_to_buffer
                     (const Cdb__ComposeAceConfigKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeAceConfigKeyT *
       cdb__compose_ace_config_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ace_config_key_t__free_unpacked
                     (Cdb__ComposeAceConfigKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeLldpMsapIdT methods */
void   cdb__compose_lldp_msap_id_t__init
                     (Cdb__ComposeLldpMsapIdT         *message);
size_t cdb__compose_lldp_msap_id_t__get_packed_size
                     (const Cdb__ComposeLldpMsapIdT   *message);
size_t cdb__compose_lldp_msap_id_t__pack
                     (const Cdb__ComposeLldpMsapIdT   *message,
                      uint8_t             *out);
size_t cdb__compose_lldp_msap_id_t__pack_to_buffer
                     (const Cdb__ComposeLldpMsapIdT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeLldpMsapIdT *
       cdb__compose_lldp_msap_id_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_lldp_msap_id_t__free_unpacked
                     (Cdb__ComposeLldpMsapIdT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpForeignMasterT methods */
void   cdb__compose_ptp_foreign_master_t__init
                     (Cdb__ComposePtpForeignMasterT         *message);
size_t cdb__compose_ptp_foreign_master_t__get_packed_size
                     (const Cdb__ComposePtpForeignMasterT   *message);
size_t cdb__compose_ptp_foreign_master_t__pack
                     (const Cdb__ComposePtpForeignMasterT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_foreign_master_t__pack_to_buffer
                     (const Cdb__ComposePtpForeignMasterT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpForeignMasterT *
       cdb__compose_ptp_foreign_master_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_foreign_master_t__free_unpacked
                     (Cdb__ComposePtpForeignMasterT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePtpResidenceTimeCacheT methods */
void   cdb__compose_ptp_residence_time_cache_t__init
                     (Cdb__ComposePtpResidenceTimeCacheT         *message);
size_t cdb__compose_ptp_residence_time_cache_t__get_packed_size
                     (const Cdb__ComposePtpResidenceTimeCacheT   *message);
size_t cdb__compose_ptp_residence_time_cache_t__pack
                     (const Cdb__ComposePtpResidenceTimeCacheT   *message,
                      uint8_t             *out);
size_t cdb__compose_ptp_residence_time_cache_t__pack_to_buffer
                     (const Cdb__ComposePtpResidenceTimeCacheT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePtpResidenceTimeCacheT *
       cdb__compose_ptp_residence_time_cache_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ptp_residence_time_cache_t__free_unpacked
                     (Cdb__ComposePtpResidenceTimeCacheT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeErpsRingKeyT methods */
void   cdb__compose_erps_ring_key_t__init
                     (Cdb__ComposeErpsRingKeyT         *message);
size_t cdb__compose_erps_ring_key_t__get_packed_size
                     (const Cdb__ComposeErpsRingKeyT   *message);
size_t cdb__compose_erps_ring_key_t__pack
                     (const Cdb__ComposeErpsRingKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_erps_ring_key_t__pack_to_buffer
                     (const Cdb__ComposeErpsRingKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeErpsRingKeyT *
       cdb__compose_erps_ring_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_erps_ring_key_t__free_unpacked
                     (Cdb__ComposeErpsRingKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeClassInPolicyConfigKeyT methods */
void   cdb__compose_class_in_policy_config_key_t__init
                     (Cdb__ComposeClassInPolicyConfigKeyT         *message);
size_t cdb__compose_class_in_policy_config_key_t__get_packed_size
                     (const Cdb__ComposeClassInPolicyConfigKeyT   *message);
size_t cdb__compose_class_in_policy_config_key_t__pack
                     (const Cdb__ComposeClassInPolicyConfigKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_class_in_policy_config_key_t__pack_to_buffer
                     (const Cdb__ComposeClassInPolicyConfigKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeClassInPolicyConfigKeyT *
       cdb__compose_class_in_policy_config_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_class_in_policy_config_key_t__free_unpacked
                     (Cdb__ComposeClassInPolicyConfigKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeAclInClassConfigKeyT methods */
void   cdb__compose_acl_in_class_config_key_t__init
                     (Cdb__ComposeAclInClassConfigKeyT         *message);
size_t cdb__compose_acl_in_class_config_key_t__get_packed_size
                     (const Cdb__ComposeAclInClassConfigKeyT   *message);
size_t cdb__compose_acl_in_class_config_key_t__pack
                     (const Cdb__ComposeAclInClassConfigKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_acl_in_class_config_key_t__pack_to_buffer
                     (const Cdb__ComposeAclInClassConfigKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeAclInClassConfigKeyT *
       cdb__compose_acl_in_class_config_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_acl_in_class_config_key_t__free_unpacked
                     (Cdb__ComposeAclInClassConfigKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeClassMapActionConfigKeyT methods */
void   cdb__compose_class_map_action_config_key_t__init
                     (Cdb__ComposeClassMapActionConfigKeyT         *message);
size_t cdb__compose_class_map_action_config_key_t__get_packed_size
                     (const Cdb__ComposeClassMapActionConfigKeyT   *message);
size_t cdb__compose_class_map_action_config_key_t__pack
                     (const Cdb__ComposeClassMapActionConfigKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_class_map_action_config_key_t__pack_to_buffer
                     (const Cdb__ComposeClassMapActionConfigKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeClassMapActionConfigKeyT *
       cdb__compose_class_map_action_config_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_class_map_action_config_key_t__free_unpacked
                     (Cdb__ComposeClassMapActionConfigKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTapGroupIngressKeyT methods */
void   cdb__compose_tap_group_ingress_key_t__init
                     (Cdb__ComposeTapGroupIngressKeyT         *message);
size_t cdb__compose_tap_group_ingress_key_t__get_packed_size
                     (const Cdb__ComposeTapGroupIngressKeyT   *message);
size_t cdb__compose_tap_group_ingress_key_t__pack
                     (const Cdb__ComposeTapGroupIngressKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_tap_group_ingress_key_t__pack_to_buffer
                     (const Cdb__ComposeTapGroupIngressKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTapGroupIngressKeyT *
       cdb__compose_tap_group_ingress_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tap_group_ingress_key_t__free_unpacked
                     (Cdb__ComposeTapGroupIngressKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTapGroupIngressFlowKeyT methods */
void   cdb__compose_tap_group_ingress_flow_key_t__init
                     (Cdb__ComposeTapGroupIngressFlowKeyT         *message);
size_t cdb__compose_tap_group_ingress_flow_key_t__get_packed_size
                     (const Cdb__ComposeTapGroupIngressFlowKeyT   *message);
size_t cdb__compose_tap_group_ingress_flow_key_t__pack
                     (const Cdb__ComposeTapGroupIngressFlowKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_tap_group_ingress_flow_key_t__pack_to_buffer
                     (const Cdb__ComposeTapGroupIngressFlowKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTapGroupIngressFlowKeyT *
       cdb__compose_tap_group_ingress_flow_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tap_group_ingress_flow_key_t__free_unpacked
                     (Cdb__ComposeTapGroupIngressFlowKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTapGroupEgressKeyT methods */
void   cdb__compose_tap_group_egress_key_t__init
                     (Cdb__ComposeTapGroupEgressKeyT         *message);
size_t cdb__compose_tap_group_egress_key_t__get_packed_size
                     (const Cdb__ComposeTapGroupEgressKeyT   *message);
size_t cdb__compose_tap_group_egress_key_t__pack
                     (const Cdb__ComposeTapGroupEgressKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_tap_group_egress_key_t__pack_to_buffer
                     (const Cdb__ComposeTapGroupEgressKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTapGroupEgressKeyT *
       cdb__compose_tap_group_egress_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tap_group_egress_key_t__free_unpacked
                     (Cdb__ComposeTapGroupEgressKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTapFiveTupleKeyT methods */
void   cdb__compose_tap_five_tuple_key_t__init
                     (Cdb__ComposeTapFiveTupleKeyT         *message);
size_t cdb__compose_tap_five_tuple_key_t__get_packed_size
                     (const Cdb__ComposeTapFiveTupleKeyT   *message);
size_t cdb__compose_tap_five_tuple_key_t__pack
                     (const Cdb__ComposeTapFiveTupleKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_tap_five_tuple_key_t__pack_to_buffer
                     (const Cdb__ComposeTapFiveTupleKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTapFiveTupleKeyT *
       cdb__compose_tap_five_tuple_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tap_five_tuple_key_t__free_unpacked
                     (Cdb__ComposeTapFiveTupleKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeTapTupleAclEntryIdT methods */
void   cdb__compose_tap_tuple_acl_entry_id_t__init
                     (Cdb__ComposeTapTupleAclEntryIdT         *message);
size_t cdb__compose_tap_tuple_acl_entry_id_t__get_packed_size
                     (const Cdb__ComposeTapTupleAclEntryIdT   *message);
size_t cdb__compose_tap_tuple_acl_entry_id_t__pack
                     (const Cdb__ComposeTapTupleAclEntryIdT   *message,
                      uint8_t             *out);
size_t cdb__compose_tap_tuple_acl_entry_id_t__pack_to_buffer
                     (const Cdb__ComposeTapTupleAclEntryIdT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeTapTupleAclEntryIdT *
       cdb__compose_tap_tuple_acl_entry_id_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_tap_tuple_acl_entry_id_t__free_unpacked
                     (Cdb__ComposeTapTupleAclEntryIdT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeAuthServerKeyT methods */
void   cdb__compose_auth_server_key_t__init
                     (Cdb__ComposeAuthServerKeyT         *message);
size_t cdb__compose_auth_server_key_t__get_packed_size
                     (const Cdb__ComposeAuthServerKeyT   *message);
size_t cdb__compose_auth_server_key_t__pack
                     (const Cdb__ComposeAuthServerKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_auth_server_key_t__pack_to_buffer
                     (const Cdb__ComposeAuthServerKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeAuthServerKeyT *
       cdb__compose_auth_server_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_auth_server_key_t__free_unpacked
                     (Cdb__ComposeAuthServerKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeAuthSessionKeyT methods */
void   cdb__compose_auth_session_key_t__init
                     (Cdb__ComposeAuthSessionKeyT         *message);
size_t cdb__compose_auth_session_key_t__get_packed_size
                     (const Cdb__ComposeAuthSessionKeyT   *message);
size_t cdb__compose_auth_session_key_t__pack
                     (const Cdb__ComposeAuthSessionKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_auth_session_key_t__pack_to_buffer
                     (const Cdb__ComposeAuthSessionKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeAuthSessionKeyT *
       cdb__compose_auth_session_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_auth_session_key_t__free_unpacked
                     (Cdb__ComposeAuthSessionKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeLldpCivicAddressT methods */
void   cdb__compose_lldp_civic_address_t__init
                     (Cdb__ComposeLldpCivicAddressT         *message);
size_t cdb__compose_lldp_civic_address_t__get_packed_size
                     (const Cdb__ComposeLldpCivicAddressT   *message);
size_t cdb__compose_lldp_civic_address_t__pack
                     (const Cdb__ComposeLldpCivicAddressT   *message,
                      uint8_t             *out);
size_t cdb__compose_lldp_civic_address_t__pack_to_buffer
                     (const Cdb__ComposeLldpCivicAddressT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeLldpCivicAddressT *
       cdb__compose_lldp_civic_address_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_lldp_civic_address_t__free_unpacked
                     (Cdb__ComposeLldpCivicAddressT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeFeaG8032RingKeyT methods */
void   cdb__compose_fea_g8032_ring_key_t__init
                     (Cdb__ComposeFeaG8032RingKeyT         *message);
size_t cdb__compose_fea_g8032_ring_key_t__get_packed_size
                     (const Cdb__ComposeFeaG8032RingKeyT   *message);
size_t cdb__compose_fea_g8032_ring_key_t__pack
                     (const Cdb__ComposeFeaG8032RingKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_fea_g8032_ring_key_t__pack_to_buffer
                     (const Cdb__ComposeFeaG8032RingKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeFeaG8032RingKeyT *
       cdb__compose_fea_g8032_ring_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_fea_g8032_ring_key_t__free_unpacked
                     (Cdb__ComposeFeaG8032RingKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeIgspGroupKeyT methods */
void   cdb__compose_igsp_group_key_t__init
                     (Cdb__ComposeIgspGroupKeyT         *message);
size_t cdb__compose_igsp_group_key_t__get_packed_size
                     (const Cdb__ComposeIgspGroupKeyT   *message);
size_t cdb__compose_igsp_group_key_t__pack
                     (const Cdb__ComposeIgspGroupKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_igsp_group_key_t__pack_to_buffer
                     (const Cdb__ComposeIgspGroupKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeIgspGroupKeyT *
       cdb__compose_igsp_group_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_igsp_group_key_t__free_unpacked
                     (Cdb__ComposeIgspGroupKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeDot1xRadiusKeyT methods */
void   cdb__compose_dot1x_radius_key_t__init
                     (Cdb__ComposeDot1xRadiusKeyT         *message);
size_t cdb__compose_dot1x_radius_key_t__get_packed_size
                     (const Cdb__ComposeDot1xRadiusKeyT   *message);
size_t cdb__compose_dot1x_radius_key_t__pack
                     (const Cdb__ComposeDot1xRadiusKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_dot1x_radius_key_t__pack_to_buffer
                     (const Cdb__ComposeDot1xRadiusKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeDot1xRadiusKeyT *
       cdb__compose_dot1x_radius_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_dot1x_radius_key_t__free_unpacked
                     (Cdb__ComposeDot1xRadiusKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeDeadRadiusKeyT methods */
void   cdb__compose_dead_radius_key_t__init
                     (Cdb__ComposeDeadRadiusKeyT         *message);
size_t cdb__compose_dead_radius_key_t__get_packed_size
                     (const Cdb__ComposeDeadRadiusKeyT   *message);
size_t cdb__compose_dead_radius_key_t__pack
                     (const Cdb__ComposeDeadRadiusKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_dead_radius_key_t__pack_to_buffer
                     (const Cdb__ComposeDeadRadiusKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeDeadRadiusKeyT *
       cdb__compose_dead_radius_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_dead_radius_key_t__free_unpacked
                     (Cdb__ComposeDeadRadiusKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeDot1xMacKeyT methods */
void   cdb__compose_dot1x_mac_key_t__init
                     (Cdb__ComposeDot1xMacKeyT         *message);
size_t cdb__compose_dot1x_mac_key_t__get_packed_size
                     (const Cdb__ComposeDot1xMacKeyT   *message);
size_t cdb__compose_dot1x_mac_key_t__pack
                     (const Cdb__ComposeDot1xMacKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_dot1x_mac_key_t__pack_to_buffer
                     (const Cdb__ComposeDot1xMacKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeDot1xMacKeyT *
       cdb__compose_dot1x_mac_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_dot1x_mac_key_t__free_unpacked
                     (Cdb__ComposeDot1xMacKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeMirrorMacEscapeKeyT methods */
void   cdb__compose_mirror_mac_escape_key_t__init
                     (Cdb__ComposeMirrorMacEscapeKeyT         *message);
size_t cdb__compose_mirror_mac_escape_key_t__get_packed_size
                     (const Cdb__ComposeMirrorMacEscapeKeyT   *message);
size_t cdb__compose_mirror_mac_escape_key_t__pack
                     (const Cdb__ComposeMirrorMacEscapeKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_mirror_mac_escape_key_t__pack_to_buffer
                     (const Cdb__ComposeMirrorMacEscapeKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeMirrorMacEscapeKeyT *
       cdb__compose_mirror_mac_escape_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_mirror_mac_escape_key_t__free_unpacked
                     (Cdb__ComposeMirrorMacEscapeKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeNsRouteKeyT methods */
void   cdb__compose_ns_route_key_t__init
                     (Cdb__ComposeNsRouteKeyT         *message);
size_t cdb__compose_ns_route_key_t__get_packed_size
                     (const Cdb__ComposeNsRouteKeyT   *message);
size_t cdb__compose_ns_route_key_t__pack
                     (const Cdb__ComposeNsRouteKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_ns_route_key_t__pack_to_buffer
                     (const Cdb__ComposeNsRouteKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeNsRouteKeyT *
       cdb__compose_ns_route_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ns_route_key_t__free_unpacked
                     (Cdb__ComposeNsRouteKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeOpenflowManagerKeyT methods */
void   cdb__compose_openflow_manager_key_t__init
                     (Cdb__ComposeOpenflowManagerKeyT         *message);
size_t cdb__compose_openflow_manager_key_t__get_packed_size
                     (const Cdb__ComposeOpenflowManagerKeyT   *message);
size_t cdb__compose_openflow_manager_key_t__pack
                     (const Cdb__ComposeOpenflowManagerKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_openflow_manager_key_t__pack_to_buffer
                     (const Cdb__ComposeOpenflowManagerKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeOpenflowManagerKeyT *
       cdb__compose_openflow_manager_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_openflow_manager_key_t__free_unpacked
                     (Cdb__ComposeOpenflowManagerKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeGlbPtpPortIdT methods */
void   cdb__compose_glb_ptp_port_id_t__init
                     (Cdb__ComposeGlbPtpPortIdT         *message);
size_t cdb__compose_glb_ptp_port_id_t__get_packed_size
                     (const Cdb__ComposeGlbPtpPortIdT   *message);
size_t cdb__compose_glb_ptp_port_id_t__pack
                     (const Cdb__ComposeGlbPtpPortIdT   *message,
                      uint8_t             *out);
size_t cdb__compose_glb_ptp_port_id_t__pack_to_buffer
                     (const Cdb__ComposeGlbPtpPortIdT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeGlbPtpPortIdT *
       cdb__compose_glb_ptp_port_id_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_glb_ptp_port_id_t__free_unpacked
                     (Cdb__ComposeGlbPtpPortIdT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeInbandSnatKeyT methods */
void   cdb__compose_inband_snat_key_t__init
                     (Cdb__ComposeInbandSnatKeyT         *message);
size_t cdb__compose_inband_snat_key_t__get_packed_size
                     (const Cdb__ComposeInbandSnatKeyT   *message);
size_t cdb__compose_inband_snat_key_t__pack
                     (const Cdb__ComposeInbandSnatKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_inband_snat_key_t__pack_to_buffer
                     (const Cdb__ComposeInbandSnatKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeInbandSnatKeyT *
       cdb__compose_inband_snat_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_inband_snat_key_t__free_unpacked
                     (Cdb__ComposeInbandSnatKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeArpaceConfigKeyT methods */
void   cdb__compose_arpace_config_key_t__init
                     (Cdb__ComposeArpaceConfigKeyT         *message);
size_t cdb__compose_arpace_config_key_t__get_packed_size
                     (const Cdb__ComposeArpaceConfigKeyT   *message);
size_t cdb__compose_arpace_config_key_t__pack
                     (const Cdb__ComposeArpaceConfigKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_arpace_config_key_t__pack_to_buffer
                     (const Cdb__ComposeArpaceConfigKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeArpaceConfigKeyT *
       cdb__compose_arpace_config_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_arpace_config_key_t__free_unpacked
                     (Cdb__ComposeArpaceConfigKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeSflowCollectorKeyT methods */
void   cdb__compose_sflow_collector_key_t__init
                     (Cdb__ComposeSflowCollectorKeyT         *message);
size_t cdb__compose_sflow_collector_key_t__get_packed_size
                     (const Cdb__ComposeSflowCollectorKeyT   *message);
size_t cdb__compose_sflow_collector_key_t__pack
                     (const Cdb__ComposeSflowCollectorKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_sflow_collector_key_t__pack_to_buffer
                     (const Cdb__ComposeSflowCollectorKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeSflowCollectorKeyT *
       cdb__compose_sflow_collector_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_sflow_collector_key_t__free_unpacked
                     (Cdb__ComposeSflowCollectorKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeVrrpVmacKeyT methods */
void   cdb__compose_vrrp_vmac_key_t__init
                     (Cdb__ComposeVrrpVmacKeyT         *message);
size_t cdb__compose_vrrp_vmac_key_t__get_packed_size
                     (const Cdb__ComposeVrrpVmacKeyT   *message);
size_t cdb__compose_vrrp_vmac_key_t__pack
                     (const Cdb__ComposeVrrpVmacKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_vrrp_vmac_key_t__pack_to_buffer
                     (const Cdb__ComposeVrrpVmacKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeVrrpVmacKeyT *
       cdb__compose_vrrp_vmac_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_vrrp_vmac_key_t__free_unpacked
                     (Cdb__ComposeVrrpVmacKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeSsmClockIdT methods */
void   cdb__compose_ssm_clock_id_t__init
                     (Cdb__ComposeSsmClockIdT         *message);
size_t cdb__compose_ssm_clock_id_t__get_packed_size
                     (const Cdb__ComposeSsmClockIdT   *message);
size_t cdb__compose_ssm_clock_id_t__pack
                     (const Cdb__ComposeSsmClockIdT   *message,
                      uint8_t             *out);
size_t cdb__compose_ssm_clock_id_t__pack_to_buffer
                     (const Cdb__ComposeSsmClockIdT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeSsmClockIdT *
       cdb__compose_ssm_clock_id_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ssm_clock_id_t__free_unpacked
                     (Cdb__ComposeSsmClockIdT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeRmonStatsHistoryKeyT methods */
void   cdb__compose_rmon_stats_history_key_t__init
                     (Cdb__ComposeRmonStatsHistoryKeyT         *message);
size_t cdb__compose_rmon_stats_history_key_t__get_packed_size
                     (const Cdb__ComposeRmonStatsHistoryKeyT   *message);
size_t cdb__compose_rmon_stats_history_key_t__pack
                     (const Cdb__ComposeRmonStatsHistoryKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_rmon_stats_history_key_t__pack_to_buffer
                     (const Cdb__ComposeRmonStatsHistoryKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeRmonStatsHistoryKeyT *
       cdb__compose_rmon_stats_history_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_rmon_stats_history_key_t__free_unpacked
                     (Cdb__ComposeRmonStatsHistoryKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeIpslaPacketStatsKeyT methods */
void   cdb__compose_ipsla_packet_stats_key_t__init
                     (Cdb__ComposeIpslaPacketStatsKeyT         *message);
size_t cdb__compose_ipsla_packet_stats_key_t__get_packed_size
                     (const Cdb__ComposeIpslaPacketStatsKeyT   *message);
size_t cdb__compose_ipsla_packet_stats_key_t__pack
                     (const Cdb__ComposeIpslaPacketStatsKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_ipsla_packet_stats_key_t__pack_to_buffer
                     (const Cdb__ComposeIpslaPacketStatsKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeIpslaPacketStatsKeyT *
       cdb__compose_ipsla_packet_stats_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ipsla_packet_stats_key_t__free_unpacked
                     (Cdb__ComposeIpslaPacketStatsKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeIpslaTestStatsKeyT methods */
void   cdb__compose_ipsla_test_stats_key_t__init
                     (Cdb__ComposeIpslaTestStatsKeyT         *message);
size_t cdb__compose_ipsla_test_stats_key_t__get_packed_size
                     (const Cdb__ComposeIpslaTestStatsKeyT   *message);
size_t cdb__compose_ipsla_test_stats_key_t__pack
                     (const Cdb__ComposeIpslaTestStatsKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_ipsla_test_stats_key_t__pack_to_buffer
                     (const Cdb__ComposeIpslaTestStatsKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeIpslaTestStatsKeyT *
       cdb__compose_ipsla_test_stats_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ipsla_test_stats_key_t__free_unpacked
                     (Cdb__ComposeIpslaTestStatsKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeMrtKeyT methods */
void   cdb__compose_mrt_key_t__init
                     (Cdb__ComposeMrtKeyT         *message);
size_t cdb__compose_mrt_key_t__get_packed_size
                     (const Cdb__ComposeMrtKeyT   *message);
size_t cdb__compose_mrt_key_t__pack
                     (const Cdb__ComposeMrtKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_mrt_key_t__pack_to_buffer
                     (const Cdb__ComposeMrtKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeMrtKeyT *
       cdb__compose_mrt_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_mrt_key_t__free_unpacked
                     (Cdb__ComposeMrtKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeVlanMappingEntryKeyT methods */
void   cdb__compose_vlan_mapping_entry_key_t__init
                     (Cdb__ComposeVlanMappingEntryKeyT         *message);
size_t cdb__compose_vlan_mapping_entry_key_t__get_packed_size
                     (const Cdb__ComposeVlanMappingEntryKeyT   *message);
size_t cdb__compose_vlan_mapping_entry_key_t__pack
                     (const Cdb__ComposeVlanMappingEntryKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_vlan_mapping_entry_key_t__pack_to_buffer
                     (const Cdb__ComposeVlanMappingEntryKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeVlanMappingEntryKeyT *
       cdb__compose_vlan_mapping_entry_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_vlan_mapping_entry_key_t__free_unpacked
                     (Cdb__ComposeVlanMappingEntryKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeEgressMappingEntryKeyT methods */
void   cdb__compose_egress_mapping_entry_key_t__init
                     (Cdb__ComposeEgressMappingEntryKeyT         *message);
size_t cdb__compose_egress_mapping_entry_key_t__get_packed_size
                     (const Cdb__ComposeEgressMappingEntryKeyT   *message);
size_t cdb__compose_egress_mapping_entry_key_t__pack
                     (const Cdb__ComposeEgressMappingEntryKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_egress_mapping_entry_key_t__pack_to_buffer
                     (const Cdb__ComposeEgressMappingEntryKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeEgressMappingEntryKeyT *
       cdb__compose_egress_mapping_entry_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_egress_mapping_entry_key_t__free_unpacked
                     (Cdb__ComposeEgressMappingEntryKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeMappedVlanInfoKeyT methods */
void   cdb__compose_mapped_vlan_info_key_t__init
                     (Cdb__ComposeMappedVlanInfoKeyT         *message);
size_t cdb__compose_mapped_vlan_info_key_t__get_packed_size
                     (const Cdb__ComposeMappedVlanInfoKeyT   *message);
size_t cdb__compose_mapped_vlan_info_key_t__pack
                     (const Cdb__ComposeMappedVlanInfoKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_mapped_vlan_info_key_t__pack_to_buffer
                     (const Cdb__ComposeMappedVlanInfoKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeMappedVlanInfoKeyT *
       cdb__compose_mapped_vlan_info_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_mapped_vlan_info_key_t__free_unpacked
                     (Cdb__ComposeMappedVlanInfoKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeNdPrefixKeyT methods */
void   cdb__compose_nd_prefix_key_t__init
                     (Cdb__ComposeNdPrefixKeyT         *message);
size_t cdb__compose_nd_prefix_key_t__get_packed_size
                     (const Cdb__ComposeNdPrefixKeyT   *message);
size_t cdb__compose_nd_prefix_key_t__pack
                     (const Cdb__ComposeNdPrefixKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_nd_prefix_key_t__pack_to_buffer
                     (const Cdb__ComposeNdPrefixKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeNdPrefixKeyT *
       cdb__compose_nd_prefix_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_nd_prefix_key_t__free_unpacked
                     (Cdb__ComposeNdPrefixKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeL2proIfActionVlanT methods */
void   cdb__compose_l2pro_if_action_vlan_t__init
                     (Cdb__ComposeL2proIfActionVlanT         *message);
size_t cdb__compose_l2pro_if_action_vlan_t__get_packed_size
                     (const Cdb__ComposeL2proIfActionVlanT   *message);
size_t cdb__compose_l2pro_if_action_vlan_t__pack
                     (const Cdb__ComposeL2proIfActionVlanT   *message,
                      uint8_t             *out);
size_t cdb__compose_l2pro_if_action_vlan_t__pack_to_buffer
                     (const Cdb__ComposeL2proIfActionVlanT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeL2proIfActionVlanT *
       cdb__compose_l2pro_if_action_vlan_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_l2pro_if_action_vlan_t__free_unpacked
                     (Cdb__ComposeL2proIfActionVlanT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeGlbQosColorActionT methods */
void   cdb__compose_glb_qos_color_action_t__init
                     (Cdb__ComposeGlbQosColorActionT         *message);
size_t cdb__compose_glb_qos_color_action_t__get_packed_size
                     (const Cdb__ComposeGlbQosColorActionT   *message);
size_t cdb__compose_glb_qos_color_action_t__pack
                     (const Cdb__ComposeGlbQosColorActionT   *message,
                      uint8_t             *out);
size_t cdb__compose_glb_qos_color_action_t__pack_to_buffer
                     (const Cdb__ComposeGlbQosColorActionT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeGlbQosColorActionT *
       cdb__compose_glb_qos_color_action_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_glb_qos_color_action_t__free_unpacked
                     (Cdb__ComposeGlbQosColorActionT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeQosPolicerResKeyT methods */
void   cdb__compose_qos_policer_res_key_t__init
                     (Cdb__ComposeQosPolicerResKeyT         *message);
size_t cdb__compose_qos_policer_res_key_t__get_packed_size
                     (const Cdb__ComposeQosPolicerResKeyT   *message);
size_t cdb__compose_qos_policer_res_key_t__pack
                     (const Cdb__ComposeQosPolicerResKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_qos_policer_res_key_t__pack_to_buffer
                     (const Cdb__ComposeQosPolicerResKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeQosPolicerResKeyT *
       cdb__compose_qos_policer_res_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_qos_policer_res_key_t__free_unpacked
                     (Cdb__ComposeQosPolicerResKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeL2editKeyT methods */
void   cdb__compose_l2edit_key_t__init
                     (Cdb__ComposeL2editKeyT         *message);
size_t cdb__compose_l2edit_key_t__get_packed_size
                     (const Cdb__ComposeL2editKeyT   *message);
size_t cdb__compose_l2edit_key_t__pack
                     (const Cdb__ComposeL2editKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_l2edit_key_t__pack_to_buffer
                     (const Cdb__ComposeL2editKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeL2editKeyT *
       cdb__compose_l2edit_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_l2edit_key_t__free_unpacked
                     (Cdb__ComposeL2editKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeCtclibOpbT methods */
void   cdb__compose_ctclib_opb_t__init
                     (Cdb__ComposeCtclibOpbT         *message);
size_t cdb__compose_ctclib_opb_t__get_packed_size
                     (const Cdb__ComposeCtclibOpbT   *message);
size_t cdb__compose_ctclib_opb_t__pack
                     (const Cdb__ComposeCtclibOpbT   *message,
                      uint8_t             *out);
size_t cdb__compose_ctclib_opb_t__pack_to_buffer
                     (const Cdb__ComposeCtclibOpbT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeCtclibOpbT *
       cdb__compose_ctclib_opb_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_ctclib_opb_t__free_unpacked
                     (Cdb__ComposeCtclibOpbT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeNatRuleKeyT methods */
void   cdb__compose_nat_rule_key_t__init
                     (Cdb__ComposeNatRuleKeyT         *message);
size_t cdb__compose_nat_rule_key_t__get_packed_size
                     (const Cdb__ComposeNatRuleKeyT   *message);
size_t cdb__compose_nat_rule_key_t__pack
                     (const Cdb__ComposeNatRuleKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_nat_rule_key_t__pack_to_buffer
                     (const Cdb__ComposeNatRuleKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeNatRuleKeyT *
       cdb__compose_nat_rule_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_nat_rule_key_t__free_unpacked
                     (Cdb__ComposeNatRuleKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeNatSessionKeyT methods */
void   cdb__compose_nat_session_key_t__init
                     (Cdb__ComposeNatSessionKeyT         *message);
size_t cdb__compose_nat_session_key_t__get_packed_size
                     (const Cdb__ComposeNatSessionKeyT   *message);
size_t cdb__compose_nat_session_key_t__pack
                     (const Cdb__ComposeNatSessionKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_nat_session_key_t__pack_to_buffer
                     (const Cdb__ComposeNatSessionKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeNatSessionKeyT *
       cdb__compose_nat_session_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_nat_session_key_t__free_unpacked
                     (Cdb__ComposeNatSessionKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeNatProxyArpKeyT methods */
void   cdb__compose_nat_proxy_arp_key_t__init
                     (Cdb__ComposeNatProxyArpKeyT         *message);
size_t cdb__compose_nat_proxy_arp_key_t__get_packed_size
                     (const Cdb__ComposeNatProxyArpKeyT   *message);
size_t cdb__compose_nat_proxy_arp_key_t__pack
                     (const Cdb__ComposeNatProxyArpKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_nat_proxy_arp_key_t__pack_to_buffer
                     (const Cdb__ComposeNatProxyArpKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeNatProxyArpKeyT *
       cdb__compose_nat_proxy_arp_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_nat_proxy_arp_key_t__free_unpacked
                     (Cdb__ComposeNatProxyArpKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeGlbPoeCfgT methods */
void   cdb__compose_glb_poe_cfg_t__init
                     (Cdb__ComposeGlbPoeCfgT         *message);
size_t cdb__compose_glb_poe_cfg_t__get_packed_size
                     (const Cdb__ComposeGlbPoeCfgT   *message);
size_t cdb__compose_glb_poe_cfg_t__pack
                     (const Cdb__ComposeGlbPoeCfgT   *message,
                      uint8_t             *out);
size_t cdb__compose_glb_poe_cfg_t__pack_to_buffer
                     (const Cdb__ComposeGlbPoeCfgT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeGlbPoeCfgT *
       cdb__compose_glb_poe_cfg_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_glb_poe_cfg_t__free_unpacked
                     (Cdb__ComposeGlbPoeCfgT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeCfmMaKeyT methods */
void   cdb__compose_cfm_ma_key_t__init
                     (Cdb__ComposeCfmMaKeyT         *message);
size_t cdb__compose_cfm_ma_key_t__get_packed_size
                     (const Cdb__ComposeCfmMaKeyT   *message);
size_t cdb__compose_cfm_ma_key_t__pack
                     (const Cdb__ComposeCfmMaKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_cfm_ma_key_t__pack_to_buffer
                     (const Cdb__ComposeCfmMaKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeCfmMaKeyT *
       cdb__compose_cfm_ma_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_cfm_ma_key_t__free_unpacked
                     (Cdb__ComposeCfmMaKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeCfmLmepKeyT methods */
void   cdb__compose_cfm_lmep_key_t__init
                     (Cdb__ComposeCfmLmepKeyT         *message);
size_t cdb__compose_cfm_lmep_key_t__get_packed_size
                     (const Cdb__ComposeCfmLmepKeyT   *message);
size_t cdb__compose_cfm_lmep_key_t__pack
                     (const Cdb__ComposeCfmLmepKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_cfm_lmep_key_t__pack_to_buffer
                     (const Cdb__ComposeCfmLmepKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeCfmLmepKeyT *
       cdb__compose_cfm_lmep_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_cfm_lmep_key_t__free_unpacked
                     (Cdb__ComposeCfmLmepKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeCfmRmepKeyT methods */
void   cdb__compose_cfm_rmep_key_t__init
                     (Cdb__ComposeCfmRmepKeyT         *message);
size_t cdb__compose_cfm_rmep_key_t__get_packed_size
                     (const Cdb__ComposeCfmRmepKeyT   *message);
size_t cdb__compose_cfm_rmep_key_t__pack
                     (const Cdb__ComposeCfmRmepKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_cfm_rmep_key_t__pack_to_buffer
                     (const Cdb__ComposeCfmRmepKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeCfmRmepKeyT *
       cdb__compose_cfm_rmep_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_cfm_rmep_key_t__free_unpacked
                     (Cdb__ComposeCfmRmepKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposeCfmTimeKeyT methods */
void   cdb__compose_cfm_time_key_t__init
                     (Cdb__ComposeCfmTimeKeyT         *message);
size_t cdb__compose_cfm_time_key_t__get_packed_size
                     (const Cdb__ComposeCfmTimeKeyT   *message);
size_t cdb__compose_cfm_time_key_t__pack
                     (const Cdb__ComposeCfmTimeKeyT   *message,
                      uint8_t             *out);
size_t cdb__compose_cfm_time_key_t__pack_to_buffer
                     (const Cdb__ComposeCfmTimeKeyT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposeCfmTimeKeyT *
       cdb__compose_cfm_time_key_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_cfm_time_key_t__free_unpacked
                     (Cdb__ComposeCfmTimeKeyT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePimSmGprefixT methods */
void   cdb__compose_pim_sm_gprefix_t__init
                     (Cdb__ComposePimSmGprefixT         *message);
size_t cdb__compose_pim_sm_gprefix_t__get_packed_size
                     (const Cdb__ComposePimSmGprefixT   *message);
size_t cdb__compose_pim_sm_gprefix_t__pack
                     (const Cdb__ComposePimSmGprefixT   *message,
                      uint8_t             *out);
size_t cdb__compose_pim_sm_gprefix_t__pack_to_buffer
                     (const Cdb__ComposePimSmGprefixT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePimSmGprefixT *
       cdb__compose_pim_sm_gprefix_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_pim_sm_gprefix_t__free_unpacked
                     (Cdb__ComposePimSmGprefixT *message,
                      ProtobufCAllocator *allocator);
/* Cdb__ComposePimStaticRpAddrT methods */
void   cdb__compose_pim_static_rp_addr_t__init
                     (Cdb__ComposePimStaticRpAddrT         *message);
size_t cdb__compose_pim_static_rp_addr_t__get_packed_size
                     (const Cdb__ComposePimStaticRpAddrT   *message);
size_t cdb__compose_pim_static_rp_addr_t__pack
                     (const Cdb__ComposePimStaticRpAddrT   *message,
                      uint8_t             *out);
size_t cdb__compose_pim_static_rp_addr_t__pack_to_buffer
                     (const Cdb__ComposePimStaticRpAddrT   *message,
                      ProtobufCBuffer     *buffer);
Cdb__ComposePimStaticRpAddrT *
       cdb__compose_pim_static_rp_addr_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cdb__compose_pim_static_rp_addr_t__free_unpacked
                     (Cdb__ComposePimStaticRpAddrT *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cdb__SubscribeRequestCdb_Closure)
                 (const Cdb__SubscribeRequestCdb *message,
                  void *closure_data);
typedef void (*Cdb__SubscribeRequestTbl_Closure)
                 (const Cdb__SubscribeRequestTbl *message,
                  void *closure_data);
typedef void (*Cdb__SubscribeRequest_Closure)
                 (const Cdb__SubscribeRequest *message,
                  void *closure_data);
typedef void (*Cdb__SubscribeResponse_Closure)
                 (const Cdb__SubscribeResponse *message,
                  void *closure_data);
typedef void (*Cdb__ComposeMacAddrT_Closure)
                 (const Cdb__ComposeMacAddrT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeFdbKeyT_Closure)
                 (const Cdb__ComposeFdbKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeMstpDigestT_Closure)
                 (const Cdb__ComposeMstpDigestT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeBrgAllowedVlanT_Closure)
                 (const Cdb__ComposeBrgAllowedVlanT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpCommonMessageHeaderT_Closure)
                 (const Cdb__ComposePtpCommonMessageHeaderT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpMsgAnnounceT_Closure)
                 (const Cdb__ComposePtpMsgAnnounceT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpDefaultT_Closure)
                 (const Cdb__ComposePtpDefaultT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpCurrentT_Closure)
                 (const Cdb__ComposePtpCurrentT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpParentT_Closure)
                 (const Cdb__ComposePtpParentT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpTimePropertiesT_Closure)
                 (const Cdb__ComposePtpTimePropertiesT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpGlobalCT_Closure)
                 (const Cdb__ComposePtpGlobalCT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpPortT_Closure)
                 (const Cdb__ComposePtpPortT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeGlbPtpPortAddressT_Closure)
                 (const Cdb__ComposeGlbPtpPortAddressT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeGlbPtpTimeintervalT_Closure)
                 (const Cdb__ComposeGlbPtpTimeintervalT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpDumpFlagT_Closure)
                 (const Cdb__ComposePtpDumpFlagT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpVlanInfoT_Closure)
                 (const Cdb__ComposePtpVlanInfoT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpPortPT_Closure)
                 (const Cdb__ComposePtpPortPT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpPortCT_Closure)
                 (const Cdb__ComposePtpPortCT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpPortStatsT_Closure)
                 (const Cdb__ComposePtpPortStatsT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpMsgProcOpsT_Closure)
                 (const Cdb__ComposePtpMsgProcOpsT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeKernelIfIpv6AddrT_Closure)
                 (const Cdb__ComposeKernelIfIpv6AddrT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTpoamDmT_Closure)
                 (const Cdb__ComposeTpoamDmT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTpoamLmT_Closure)
                 (const Cdb__ComposeTpoamLmT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTpoamLbT_Closure)
                 (const Cdb__ComposeTpoamLbT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTpoamEventT_Closure)
                 (const Cdb__ComposeTpoamEventT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTpoamStatsT_Closure)
                 (const Cdb__ComposeTpoamStatsT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTpoamListT_Closure)
                 (const Cdb__ComposeTpoamListT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTpoamRcCountT_Closure)
                 (const Cdb__ComposeTpoamRcCountT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTpoamExecT_Closure)
                 (const Cdb__ComposeTpoamExecT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTpoamTrapCacheT_Closure)
                 (const Cdb__ComposeTpoamTrapCacheT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTpoamRatelimitT_Closure)
                 (const Cdb__ComposeTpoamRatelimitT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTpoamLmmExecT_Closure)
                 (const Cdb__ComposeTpoamLmmExecT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTpoamLbExecT_Closure)
                 (const Cdb__ComposeTpoamLbExecT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTpoam1dmDmmExecT_Closure)
                 (const Cdb__ComposeTpoam1dmDmmExecT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeUploadTpoamDmT_Closure)
                 (const Cdb__ComposeUploadTpoamDmT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeUploadTpoamLmT_Closure)
                 (const Cdb__ComposeUploadTpoamLmT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeUploadTpoamCcmT_Closure)
                 (const Cdb__ComposeUploadTpoamCcmT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeGlbBoardTypeT_Closure)
                 (const Cdb__ComposeGlbBoardTypeT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeGlbStatsT_Closure)
                 (const Cdb__ComposeGlbStatsT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeMstiPortKeyT_Closure)
                 (const Cdb__ComposeMstiPortKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeBindingKeyT_Closure)
                 (const Cdb__ComposeBindingKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeNsPortForwardingKeyT_Closure)
                 (const Cdb__ComposeNsPortForwardingKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeRouteNodeKeyT_Closure)
                 (const Cdb__ComposeRouteNodeKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeRouteNodeKeyWithAdT_Closure)
                 (const Cdb__ComposeRouteNodeKeyWithAdT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeSummerTimeT_Closure)
                 (const Cdb__ComposeSummerTimeT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeWhichSummerTimeT_Closure)
                 (const Cdb__ComposeWhichSummerTimeT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeOspfAreaRangeKeyT_Closure)
                 (const Cdb__ComposeOspfAreaRangeKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeOspf6AreaRangeKeyT_Closure)
                 (const Cdb__ComposeOspf6AreaRangeKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeOspfAreaVlinkKeyT_Closure)
                 (const Cdb__ComposeOspfAreaVlinkKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeRipTimersT_Closure)
                 (const Cdb__ComposeRipTimersT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeNexthopKeyT_Closure)
                 (const Cdb__ComposeNexthopKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeAddrIpv4T_Closure)
                 (const Cdb__ComposeAddrIpv4T *message,
                  void *closure_data);
typedef void (*Cdb__ComposeAddrIpv6T_Closure)
                 (const Cdb__ComposeAddrIpv6T *message,
                  void *closure_data);
typedef void (*Cdb__ComposePrefixIpv4T_Closure)
                 (const Cdb__ComposePrefixIpv4T *message,
                  void *closure_data);
typedef void (*Cdb__ComposePrefixT_Closure)
                 (const Cdb__ComposePrefixT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeMstpBrgIdT_Closure)
                 (const Cdb__ComposeMstpBrgIdT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeSalTimeT_Closure)
                 (const Cdb__ComposeSalTimeT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTimeRangeValueT_Closure)
                 (const Cdb__ComposeTimeRangeValueT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTimeRangeTimerT_Closure)
                 (const Cdb__ComposeTimeRangeTimerT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeSnmpTrapKeyT_Closure)
                 (const Cdb__ComposeSnmpTrapKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeSnmpViewKeyT_Closure)
                 (const Cdb__ComposeSnmpViewKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeSnmpGroupUsmKeyT_Closure)
                 (const Cdb__ComposeSnmpGroupUsmKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeSnmpInformKeyT_Closure)
                 (const Cdb__ComposeSnmpInformKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeAddrT_Closure)
                 (const Cdb__ComposeAddrT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeSnmpInfoT_Closure)
                 (const Cdb__ComposeSnmpInfoT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeUserT_Closure)
                 (const Cdb__ComposeUserT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeRsaKeystrT_Closure)
                 (const Cdb__ComposeRsaKeystrT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTimestampT_Closure)
                 (const Cdb__ComposeTimestampT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeMailT_Closure)
                 (const Cdb__ComposeMailT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeGlbFlowL4PortT_Closure)
                 (const Cdb__ComposeGlbFlowL4PortT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeGlbFlowTcpFlagT_Closure)
                 (const Cdb__ComposeGlbFlowTcpFlagT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeNexthopEcmpT_Closure)
                 (const Cdb__ComposeNexthopEcmpT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeNexthopEcmpRoutedT_Closure)
                 (const Cdb__ComposeNexthopEcmpRoutedT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeAceConfigKeyT_Closure)
                 (const Cdb__ComposeAceConfigKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeLldpMsapIdT_Closure)
                 (const Cdb__ComposeLldpMsapIdT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpForeignMasterT_Closure)
                 (const Cdb__ComposePtpForeignMasterT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePtpResidenceTimeCacheT_Closure)
                 (const Cdb__ComposePtpResidenceTimeCacheT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeErpsRingKeyT_Closure)
                 (const Cdb__ComposeErpsRingKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeClassInPolicyConfigKeyT_Closure)
                 (const Cdb__ComposeClassInPolicyConfigKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeAclInClassConfigKeyT_Closure)
                 (const Cdb__ComposeAclInClassConfigKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeClassMapActionConfigKeyT_Closure)
                 (const Cdb__ComposeClassMapActionConfigKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTapGroupIngressKeyT_Closure)
                 (const Cdb__ComposeTapGroupIngressKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTapGroupIngressFlowKeyT_Closure)
                 (const Cdb__ComposeTapGroupIngressFlowKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTapGroupEgressKeyT_Closure)
                 (const Cdb__ComposeTapGroupEgressKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTapFiveTupleKeyT_Closure)
                 (const Cdb__ComposeTapFiveTupleKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeTapTupleAclEntryIdT_Closure)
                 (const Cdb__ComposeTapTupleAclEntryIdT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeAuthServerKeyT_Closure)
                 (const Cdb__ComposeAuthServerKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeAuthSessionKeyT_Closure)
                 (const Cdb__ComposeAuthSessionKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeLldpCivicAddressT_Closure)
                 (const Cdb__ComposeLldpCivicAddressT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeFeaG8032RingKeyT_Closure)
                 (const Cdb__ComposeFeaG8032RingKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeIgspGroupKeyT_Closure)
                 (const Cdb__ComposeIgspGroupKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeDot1xRadiusKeyT_Closure)
                 (const Cdb__ComposeDot1xRadiusKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeDeadRadiusKeyT_Closure)
                 (const Cdb__ComposeDeadRadiusKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeDot1xMacKeyT_Closure)
                 (const Cdb__ComposeDot1xMacKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeMirrorMacEscapeKeyT_Closure)
                 (const Cdb__ComposeMirrorMacEscapeKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeNsRouteKeyT_Closure)
                 (const Cdb__ComposeNsRouteKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeOpenflowManagerKeyT_Closure)
                 (const Cdb__ComposeOpenflowManagerKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeGlbPtpPortIdT_Closure)
                 (const Cdb__ComposeGlbPtpPortIdT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeInbandSnatKeyT_Closure)
                 (const Cdb__ComposeInbandSnatKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeArpaceConfigKeyT_Closure)
                 (const Cdb__ComposeArpaceConfigKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeSflowCollectorKeyT_Closure)
                 (const Cdb__ComposeSflowCollectorKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeVrrpVmacKeyT_Closure)
                 (const Cdb__ComposeVrrpVmacKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeSsmClockIdT_Closure)
                 (const Cdb__ComposeSsmClockIdT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeRmonStatsHistoryKeyT_Closure)
                 (const Cdb__ComposeRmonStatsHistoryKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeIpslaPacketStatsKeyT_Closure)
                 (const Cdb__ComposeIpslaPacketStatsKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeIpslaTestStatsKeyT_Closure)
                 (const Cdb__ComposeIpslaTestStatsKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeMrtKeyT_Closure)
                 (const Cdb__ComposeMrtKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeVlanMappingEntryKeyT_Closure)
                 (const Cdb__ComposeVlanMappingEntryKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeEgressMappingEntryKeyT_Closure)
                 (const Cdb__ComposeEgressMappingEntryKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeMappedVlanInfoKeyT_Closure)
                 (const Cdb__ComposeMappedVlanInfoKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeNdPrefixKeyT_Closure)
                 (const Cdb__ComposeNdPrefixKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeL2proIfActionVlanT_Closure)
                 (const Cdb__ComposeL2proIfActionVlanT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeGlbQosColorActionT_Closure)
                 (const Cdb__ComposeGlbQosColorActionT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeQosPolicerResKeyT_Closure)
                 (const Cdb__ComposeQosPolicerResKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeL2editKeyT_Closure)
                 (const Cdb__ComposeL2editKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeCtclibOpbT_Closure)
                 (const Cdb__ComposeCtclibOpbT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeNatRuleKeyT_Closure)
                 (const Cdb__ComposeNatRuleKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeNatSessionKeyT_Closure)
                 (const Cdb__ComposeNatSessionKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeNatProxyArpKeyT_Closure)
                 (const Cdb__ComposeNatProxyArpKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeGlbPoeCfgT_Closure)
                 (const Cdb__ComposeGlbPoeCfgT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeCfmMaKeyT_Closure)
                 (const Cdb__ComposeCfmMaKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeCfmLmepKeyT_Closure)
                 (const Cdb__ComposeCfmLmepKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeCfmRmepKeyT_Closure)
                 (const Cdb__ComposeCfmRmepKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposeCfmTimeKeyT_Closure)
                 (const Cdb__ComposeCfmTimeKeyT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePimSmGprefixT_Closure)
                 (const Cdb__ComposePimSmGprefixT *message,
                  void *closure_data);
typedef void (*Cdb__ComposePimStaticRpAddrT_Closure)
                 (const Cdb__ComposePimStaticRpAddrT *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cdb__subscribe_request_cdb__descriptor;
extern const ProtobufCMessageDescriptor cdb__subscribe_request_tbl__descriptor;
extern const ProtobufCMessageDescriptor cdb__subscribe_request__descriptor;
extern const ProtobufCMessageDescriptor cdb__subscribe_response__descriptor;
extern const ProtobufCEnumDescriptor    cdb__subscribe_response__cdb_opertion__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_mac_addr_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_fdb_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_mstp_digest_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_brg_allowed_vlan_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_common_message_header_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_msg_announce_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_default_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_current_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_parent_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_time_properties_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_global_c_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_port_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_glb_ptp_port_address_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_glb_ptp_timeinterval_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_dump_flag_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_vlan_info_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_port_p_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_port_c_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_port_stats_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_msg_proc_ops_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_kernel_if_ipv6_addr_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tpoam_dm_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tpoam_lm_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tpoam_lb_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tpoam_event_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tpoam_stats_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tpoam_list_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tpoam_rc_count_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tpoam_exec_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tpoam_trap_cache_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tpoam_ratelimit_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tpoam_lmm_exec_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tpoam_lb_exec_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tpoam_1dm_dmm_exec_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_upload_tpoam_dm_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_upload_tpoam_lm_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_upload_tpoam_ccm_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_glb_board_type_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_glb_stats_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_msti_port_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_binding_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ns_port_forwarding_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_route_node_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_route_node_key_with_ad_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_summer_time_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_which_summer_time_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ospf_area_range_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ospf6_area_range_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ospf_area_vlink_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_rip_timers_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_nexthop_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_addr_ipv4_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_addr_ipv6_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_prefix_ipv4_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_prefix_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_mstp_brg_id_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_sal_time_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_time_range_value_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_time_range_timer_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_snmp_trap_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_snmp_view_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_snmp_group_usm_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_snmp_inform_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_addr_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_snmp_info_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_user_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_rsa_keystr_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_timestamp_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_mail_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_glb_flow_l4_port_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_glb_flow_tcp_flag_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_nexthop_ecmp_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_nexthop_ecmp_routed_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ace_config_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_lldp_msap_id_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_foreign_master_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ptp_residence_time_cache_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_erps_ring_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_class_in_policy_config_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_acl_in_class_config_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_class_map_action_config_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tap_group_ingress_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tap_group_ingress_flow_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tap_group_egress_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tap_five_tuple_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_tap_tuple_acl_entry_id_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_auth_server_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_auth_session_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_lldp_civic_address_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_fea_g8032_ring_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_igsp_group_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_dot1x_radius_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_dead_radius_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_dot1x_mac_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_mirror_mac_escape_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ns_route_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_openflow_manager_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_glb_ptp_port_id_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_inband_snat_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_arpace_config_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_sflow_collector_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_vrrp_vmac_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ssm_clock_id_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_rmon_stats_history_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ipsla_packet_stats_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ipsla_test_stats_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_mrt_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_vlan_mapping_entry_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_egress_mapping_entry_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_mapped_vlan_info_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_nd_prefix_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_l2pro_if_action_vlan_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_glb_qos_color_action_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_qos_policer_res_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_l2edit_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_ctclib_opb_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_nat_rule_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_nat_session_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_nat_proxy_arp_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_glb_poe_cfg_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_cfm_ma_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_cfm_lmep_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_cfm_rmep_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_cfm_time_key_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_pim_sm_gprefix_t__descriptor;
extern const ProtobufCMessageDescriptor cdb__compose_pim_static_rp_addr_t__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_common_2eproto__INCLUDED */
